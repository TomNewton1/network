{"ast":null,"code":"import axios from \"axios\";\nimport { GET_POSTS, CREATE_POST, LIKE_POST, GET_FOLLOWING_POSTS } from \"./types\";\nimport { tokenConfig } from './auth'; //Get All Posts\n\nexport const getPosts = () => (dispatch, getState) => {\n  console.log(\"Get landing post was called\");\n  axios.get('http://127.0.0.1:8000/api/post-list/', tokenConfig(getState)).then(res => {\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; //Get All Posts form users the user follows\n\nexport const getFollowerPosts = user_id => (dispatch, getState) => {\n  console.log(\"Get landing post was called\");\n  axios.get(`http://127.0.0.1:8000/api/post-list-followers/${user_id}`, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: GET_FOLLOWING_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Create Post\n\nexport const createPost = (user, title, body) => (dispatch, getState) => {\n  console.log(\"Create post function called.\"); // Request Body\n\n  const requestBody = JSON.stringify({\n    user,\n    title,\n    body\n  });\n  axios.post('http://127.0.0.1:8000/api/post-submit/', requestBody, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: CREATE_POST,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Vote Post\n\nexport const votePost = (post, post_id, user_id, type) => (dispatch, getState) => {\n  console.log(\"A vote button was clicked button clicked\"); //post.likes = parseFloat(post.likes) + 1; // Increment Like to make UI change immediately\n\n  console.log(\"Post for PUT request\", post); // Request Body\n\n  const requestBody = JSON.stringify({\n    post_id,\n    user_id\n  });\n  axios.put('http://127.0.0.1:8000/api/post-like/', requestBody, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: LIKE_POST,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Edit Post\n// Delete Post","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/network_frontend/src/actions/posts.js"],"names":["axios","GET_POSTS","CREATE_POST","LIKE_POST","GET_FOLLOWING_POSTS","tokenConfig","getPosts","dispatch","getState","console","log","get","then","res","type","payload","data","catch","err","getFollowerPosts","user_id","createPost","user","title","body","requestBody","JSON","stringify","post","votePost","post_id","put"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { GET_POSTS, CREATE_POST, LIKE_POST, GET_FOLLOWING_POSTS } from \"./types\";\nimport { tokenConfig } from './auth';\n\n//Get All Posts\n\nexport const getPosts = () => (dispatch, getState) => {\n\n    console.log(\"Get landing post was called\")\n\n    axios\n        .get('http://127.0.0.1:8000/api/post-list/', tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_POSTS,\n                payload: res.data\n            });\n        }).catch(err => console.log(err));\n       \n}\n\n\n//Get All Posts form users the user follows\n\nexport const getFollowerPosts = (user_id) => (dispatch, getState) => {\n\n    console.log(\"Get landing post was called\")\n\n    axios\n        .get(`http://127.0.0.1:8000/api/post-list-followers/${user_id}`, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_FOLLOWING_POSTS,\n                payload: res.data\n            });\n        }).catch(err => console.log(err));\n       \n}\n\n\n// Create Post\n\nexport const createPost = (user, title, body) => (dispatch, getState) => {\n    \n    console.log(\"Create post function called.\");\n\n    // Request Body\n\tconst requestBody = JSON.stringify({ user, title, body });\n\n\n    axios\n      .post('http://127.0.0.1:8000/api/post-submit/', requestBody, tokenConfig(getState))\n      .then((res) => {\n        dispatch({\n          type: CREATE_POST,\n          payload: res.data,\n        });\n      }).catch(err => console.log(err));\n    \n  };\n\n\n// Vote Post\n\nexport const votePost = (post, post_id, user_id, type) => (dispatch, getState) => {\n\n    console.log(\"A vote button was clicked button clicked\")\n\n    //post.likes = parseFloat(post.likes) + 1; // Increment Like to make UI change immediately\n\n    console.log(\"Post for PUT request\", post)\n\n    // Request Body\n\tconst requestBody = JSON.stringify({ post_id, user_id });\n\n    axios\n        .put('http://127.0.0.1:8000/api/post-like/', requestBody, tokenConfig(getState) )\n        .then((res) => {\n            dispatch({\n                type: LIKE_POST,\n                payload: res.data,\n            });\n        }).catch(err => console.log(err));\n\n};\n\n\n// Edit Post\n\n\n// Delete Post\n\n"]},"metadata":{},"sourceType":"module"}