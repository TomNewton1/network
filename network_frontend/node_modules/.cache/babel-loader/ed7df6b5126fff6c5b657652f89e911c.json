{"ast":null,"code":"import axios from\"axios\";import{GET_POSTS,CREATE_POST,LIKE_POST,GET_FOLLOWING_POSTS,GET_USER_POSTS,EDIT_POST}from\"./types\";import{tokenConfig}from'./auth';//Get All Posts\nexport var getPosts=function getPosts(){return function(dispatch,getState){axios.get('http://127.0.0.1:8000/api/post-list/',tokenConfig(getState)).then(function(res){dispatch({type:GET_POSTS,payload:res.data});}).catch(function(err){return console.log(err);});};};//Get All Posts form users the user follows\nexport var getFollowerPosts=function getFollowerPosts(user_id){return function(dispatch,getState){axios.get(\"http://127.0.0.1:8000/api/post-list-followers/\".concat(user_id),tokenConfig(getState)).then(function(res){dispatch({type:GET_FOLLOWING_POSTS,payload:res.data});}).catch(function(err){return console.log(err);});};};//Get All Posts form the user clicked on\nexport var getUserPosts=function getUserPosts(user_id){return function(dispatch,getState){axios.get(\"http://127.0.0.1:8000/api/post-list-user/\".concat(user_id),tokenConfig(getState)).then(function(res){dispatch({type:GET_USER_POSTS,payload:res.data});}).catch(function(err){return console.log(err);});};};// Create Post\nexport var createPost=function createPost(user,username,title,body){return function(dispatch,getState){// Request Body\nvar requestBody=JSON.stringify({user:user,username:username,title:title,body:body});axios.post('http://127.0.0.1:8000/api/post-submit/',requestBody,tokenConfig(getState)).then(function(res){dispatch({type:CREATE_POST,payload:res.data});}).catch(function(err){return console.log(err);});};};// Vote Post\nexport var votePost=function votePost(user,post,type){return function(dispatch,getState){// Request Body\nvar requestBody=JSON.stringify({user:user,post:post,type:type});axios.put('http://127.0.0.1:8000/api/post-vote/',requestBody,tokenConfig(getState)).then(function(res){dispatch({type:LIKE_POST,payload:res.data});}).catch(function(err){return console.log(err);});};};// Edit Post\nexport var editPost=function editPost(post_id,title,body){return function(dispatch,getState){// Request Body\nvar requestBody=JSON.stringify({post_id:post_id,title:title,body:body});console.log(\"editPost submitted\");axios.put(\"http://127.0.0.1:8000/api/post-edit/\".concat(post_id),requestBody,tokenConfig(getState)).then(function(res){dispatch({type:EDIT_POST,payload:res.data});}).catch(function(err){return console.log(err);});};};","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/project4/network_frontend/src/actions/posts.js"],"names":["axios","GET_POSTS","CREATE_POST","LIKE_POST","GET_FOLLOWING_POSTS","GET_USER_POSTS","EDIT_POST","tokenConfig","getPosts","dispatch","getState","get","then","res","type","payload","data","catch","err","console","log","getFollowerPosts","user_id","getUserPosts","createPost","user","username","title","body","requestBody","JSON","stringify","post","votePost","put","editPost","post_id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { GET_POSTS, CREATE_POST, LIKE_POST, GET_FOLLOWING_POSTS, GET_USER_POSTS, EDIT_POST } from \"./types\";\nimport { tokenConfig } from './auth';\n\n//Get All Posts\nexport const getPosts = () => (dispatch, getState) => {\n\n    axios\n        .get('http://127.0.0.1:8000/api/post-list/', tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_POSTS,\n                payload: res.data\n            });\n        }).catch(err => console.log(err));\n       \n}\n\n\n//Get All Posts form users the user follows\nexport const getFollowerPosts = (user_id) => (dispatch, getState) => {\n\n    axios\n        .get(`http://127.0.0.1:8000/api/post-list-followers/${user_id}`, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_FOLLOWING_POSTS,\n                payload: res.data\n            });\n        }).catch(err => console.log(err));\n       \n}\n\n//Get All Posts form the user clicked on\nexport const getUserPosts = (user_id) => (dispatch, getState) => {\n\n    axios\n        .get(`http://127.0.0.1:8000/api/post-list-user/${user_id}`, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_USER_POSTS,\n                payload: res.data\n            });\n        }) \n        .catch(err => console.log(err));\n       \n}\n\n\n// Create Post\nexport const createPost = (user, username, title, body) => (dispatch, getState) => {\n    \n    // Request Body\n\tconst requestBody = JSON.stringify({ user, username, title, body });\n\n\n    axios\n      .post('http://127.0.0.1:8000/api/post-submit/', requestBody, tokenConfig(getState))\n      .then((res) => {\n        dispatch({\n          type: CREATE_POST,\n          payload: res.data,\n        });\n      }).catch(err => console.log(err));\n    \n  };\n\n\n// Vote Post\nexport const votePost = (user, post, type) => (dispatch, getState) => {\n\n    // Request Body\n\tconst requestBody = JSON.stringify({user, post, type});\n\n    axios\n        .put('http://127.0.0.1:8000/api/post-vote/', requestBody, tokenConfig(getState) )\n        .then((res) => {\n            dispatch({\n                type: LIKE_POST,\n                payload: res.data,\n            });\n        })\n        .catch(err => console.log(err));\n\n};\n\n// Edit Post\n\nexport const editPost = (post_id, title, body) => (dispatch, getState) => {\n\n    // Request Body\n\tconst requestBody = JSON.stringify({ post_id, title, body });\n\n    console.log(\"editPost submitted\")\n\n    axios\n        .put(`http://127.0.0.1:8000/api/post-edit/${post_id}`, requestBody, tokenConfig(getState))\n        .then((res) => {\n            dispatch({\n              type: EDIT_POST,\n              payload: res.data,\n            });\n          }).catch(err => console.log(err));\n        \n      };\n\n\n"]},"metadata":{},"sourceType":"module"}