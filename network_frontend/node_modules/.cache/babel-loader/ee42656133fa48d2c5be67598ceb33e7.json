{"ast":null,"code":"import axios from \"axios\";\nimport { GET_POSTS, CREATE_POST, LIKE_POST, GET_FOLLOWING_POSTS, GET_USER_POSTS } from \"./types\";\nimport { tokenConfig } from './auth'; //Get All Posts\n\nexport const getPosts = () => (dispatch, getState) => {\n  axios.get('http://127.0.0.1:8000/api/post-list/', tokenConfig(getState)).then(res => {\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; //Get All Posts form users the user follows\n\nexport const getFollowerPosts = user_id => (dispatch, getState) => {\n  axios.get(`http://127.0.0.1:8000/api/post-list-followers/${user_id}`, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: GET_FOLLOWING_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; //Get All Posts form the user clicked on\n\nexport const getUserPosts = user_id => (dispatch, getState) => {\n  axios.get(`http://127.0.0.1:8000/api/post-list-user/${user_id}`, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: GET_USER_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Create Post\n\nexport const createPost = (user, username, title, body) => (dispatch, getState) => {\n  // Request Body\n  const requestBody = JSON.stringify({\n    user,\n    username,\n    title,\n    body\n  });\n  axios.post('http://127.0.0.1:8000/api/post-submit/', requestBody, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: CREATE_POST,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Vote Post\n\nexport const votePost = (user, post, type) => (dispatch, getState) => {\n  // Request Body\n  const requestBody = JSON.stringify({\n    user,\n    post,\n    type\n  });\n  axios.put('http://127.0.0.1:8000/api/post-vote/', requestBody, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: LIKE_POST,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Edit Post\n\nexport const editPost = (user, username, title, body) => (dispatch, getState) => {\n  // Request Body\n  const requestBody = JSON.stringify({\n    user,\n    username,\n    title,\n    body\n  });\n  axios.put('http://127.0.0.1:8000/api/post-edit/', requestBody, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Delete Post","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/network_frontend/src/actions/posts.js"],"names":["axios","GET_POSTS","CREATE_POST","LIKE_POST","GET_FOLLOWING_POSTS","GET_USER_POSTS","tokenConfig","getPosts","dispatch","getState","get","then","res","type","payload","data","catch","err","console","log","getFollowerPosts","user_id","getUserPosts","createPost","user","username","title","body","requestBody","JSON","stringify","post","votePost","put","editPost"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { GET_POSTS, CREATE_POST, LIKE_POST, GET_FOLLOWING_POSTS, GET_USER_POSTS } from \"./types\";\nimport { tokenConfig } from './auth';\n\n//Get All Posts\nexport const getPosts = () => (dispatch, getState) => {\n\n    axios\n        .get('http://127.0.0.1:8000/api/post-list/', tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_POSTS,\n                payload: res.data\n            });\n        }).catch(err => console.log(err));\n       \n}\n\n\n//Get All Posts form users the user follows\nexport const getFollowerPosts = (user_id) => (dispatch, getState) => {\n\n    axios\n        .get(`http://127.0.0.1:8000/api/post-list-followers/${user_id}`, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_FOLLOWING_POSTS,\n                payload: res.data\n            });\n        }).catch(err => console.log(err));\n       \n}\n\n//Get All Posts form the user clicked on\nexport const getUserPosts = (user_id) => (dispatch, getState) => {\n\n    axios\n        .get(`http://127.0.0.1:8000/api/post-list-user/${user_id}`, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_USER_POSTS,\n                payload: res.data\n            });\n        }) \n        .catch(err => console.log(err));\n       \n}\n\n\n// Create Post\nexport const createPost = (user, username, title, body) => (dispatch, getState) => {\n    \n\n    // Request Body\n\tconst requestBody = JSON.stringify({ user, username, title, body });\n\n\n    axios\n      .post('http://127.0.0.1:8000/api/post-submit/', requestBody, tokenConfig(getState))\n      .then((res) => {\n        dispatch({\n          type: CREATE_POST,\n          payload: res.data,\n        });\n      }).catch(err => console.log(err));\n    \n  };\n\n\n// Vote Post\nexport const votePost = (user, post, type) => (dispatch, getState) => {\n\n    // Request Body\n\tconst requestBody = JSON.stringify({user, post, type});\n\n    axios\n        .put('http://127.0.0.1:8000/api/post-vote/', requestBody, tokenConfig(getState) )\n        .then((res) => {\n            dispatch({\n                type: LIKE_POST,\n                payload: res.data,\n            });\n        })\n        .catch(err => console.log(err));\n\n};\n\n// Edit Post\n\nexport const editPost = (user, username, title, body) => (dispatch, getState) => {\n\n    // Request Body\n\tconst requestBody = JSON.stringify({ user, username, title, body });\n\n    axios\n        .put('http://127.0.0.1:8000/api/post-edit/', requestBody, tokenConfig(getState))\n        .then((res) => {\n            dispatch({\n              type: GET_POSTS,\n              payload: res.data,\n            });\n          }).catch(err => console.log(err));\n        \n      };\n\n// Delete Post\n\n"]},"metadata":{},"sourceType":"module"}