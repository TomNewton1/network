{"ast":null,"code":"import { GET_LEADS } from \"../actions/types\";\nconst initialState = {\n  leads: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_LEADS:\n      return { ...state,\n        leads: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/network_frontend/src/reducers/leads.js"],"names":["GET_LEADS","initialState","leads","state","action","type","payload"],"mappings":"AAAA,SAASA,SAAT,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,eAAe,UAASC,KAAK,GAAGF,YAAjB,EAA+BG,MAA/B,EAAuC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,SAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFX,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAPR;AASH","sourcesContent":["import { GET_LEADS } from \"../actions/types\";\n\nconst initialState = {\n    leads: [],\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case GET_LEADS:\n            return {\n                ...state,\n                leads: action.payload\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}