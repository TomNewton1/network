{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnewton/Desktop/network_frontend/src/components/create/Create.js\";\nimport React, { Component } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { connect, useDispatch } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { useHistory } from \"react-router\";\nimport { createPost } from \"../../actions/posts\";\nimport \"./Create.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class create extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      body: ''\n    };\n\n    this.onSubmit = data => {\n      const {\n        title,\n        body\n      } = this.state;\n      const post = {\n        title,\n        body\n      };\n      this.props.createPost(post);\n      this.setState({\n        title: '',\n        body: ''\n      });\n    };\n  }\n\n  render() {\n    const {\n      title,\n      body\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-group\",\n          onSubmit: handleSubmit(this.onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"title-input\",\n            type: \"text\",\n            placeholder: \"Title\",\n            name: \"title\",\n            ...register(\"title\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), errors.titleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"You must provide a title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"body-input\",\n            type: \"text\",\n            placeholder: \"Text(Optional)\",\n            name: \"body\",\n            ...register(\"body\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-button\",\n            value: \"POST\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\ncreate.propTypes = {\n  createPost: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    state,\n    isAuthenticated: state.auth.isAuthenticated\n  };\n}\n\nexport default connect(mapStateToProps, {\n  createPost\n})(Create);","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/network_frontend/src/components/create/Create.js"],"names":["React","Component","useForm","connect","useDispatch","PropTypes","useHistory","createPost","create","state","title","body","onSubmit","data","post","props","setState","render","handleSubmit","register","required","errors","titleRequired","propTypes","func","isRequired","mapStateToProps","isAuthenticated","auth","Create"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,OAAO,cAAP;;AAGA,OAAO,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAAA;AAAA;AAAA,SAClCQ,KADkC,GAC1B;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,IAAI,EAAE;AAFF,KAD0B;;AAAA,SAUhCC,QAVgC,GAUpBC,IAAD,IAAU;AACnB,YAAM;AAAEH,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkB,KAAKF,KAA7B;AACA,YAAMK,IAAI,GAAG;AAAEJ,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAb;AACA,WAAKI,KAAL,CAAWR,UAAX,CAAsBO,IAAtB;AACA,WAAKE,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAE,EADK;AAEZC,QAAAA,IAAI,EAAE;AAFM,OAAd;AAID,KAlB+B;AAAA;;AAqBlCM,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkB,KAAKF,KAA7B;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADS,eAET;AAAA;AAAA;AAAA;AAAA,cAFS,eAGA;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,YAAhB;AAA6B,UAAA,QAAQ,EAAES,YAAY,CAAC,KAAKN,QAAN,CAAnD;AAAA,kCACI;AACI,YAAA,SAAS,EAAC,aADd;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,WAAW,EAAC,OAHhB;AAII,YAAA,IAAI,EAAC,OAJT;AAAA,eAKQO,QAAQ,CAAC,OAAD,EAAU;AAAEC,cAAAA,QAAQ,EAAE;AAAZ,aAAV;AALhB;AAAA;AAAA;AAAA;AAAA,kBADJ,EAQKC,MAAM,CAACC,aAAP,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAR7B,eASI;AACI,YAAA,SAAS,EAAC,YADd;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,WAAW,EAAC,gBAHhB;AAII,YAAA,IAAI,EAAC,MAJT;AAAA,eAKQH,QAAQ,CAAC,MAAD;AALhB;AAAA;AAAA;AAAA;AAAA,kBATJ,eAgBI;AACI,YAAA,SAAS,EAAC,aADd;AAEI,YAAA,KAAK,EAAC,MAFV;AAGI,YAAA,IAAI,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,kBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA8BH;;AAvDiC;AAAzBX,M,CAMAe,S,GAAY;AACjBhB,EAAAA,UAAU,EAAEF,SAAS,CAACmB,IAAV,CAAeC;AADV,C;;AAqDzB,SAASC,eAAT,CAAyBjB,KAAzB,EAAgC;AAC/B,SAAO;AACNA,IAAAA,KADM;AAENkB,IAAAA,eAAe,EAAElB,KAAK,CAACmB,IAAN,CAAWD;AAFtB,GAAP;AAIA;;AAED,eAAexB,OAAO,CAACuB,eAAD,EAAkB;AAACnB,EAAAA;AAAD,CAAlB,CAAP,CAAuCsB,MAAvC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { useForm } from \"react-hook-form\";\nimport { connect, useDispatch } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { useHistory } from \"react-router\";\n\nimport { createPost } from \"../../actions/posts\";\n\nimport \"./Create.css\"\n\n\nexport class create extends Component {\n    state = {\n        title: '',\n        body: '',\n      };\n\n      static propTypes = {\n        createPost: PropTypes.func.isRequired,\n      };\n\n      onSubmit = (data) => {\n        const { title, body } = this.state;\n        const post = { title, body };\n        this.props.createPost(post);\n        this.setState({\n          title: '',\n          body: '',\n        });\n      };\n\n\n    render() {\n\n        const { title, body } = this.state;\n\n        return (\n            <div className=\"create-container\">\n\t\t\t<h3>Create Post</h3>\n\t\t\t<hr />\n            <div className=\"form-container\">\n                <form className=\"form-group\" onSubmit={handleSubmit(this.onSubmit)}>\n                    <input\n                        className=\"title-input\"\n                        type=\"text\" \n                        placeholder=\"Title\" \n                        name=\"title\"\n                        {...register(\"title\", { required: true })}\n                    />\n                    {errors.titleRequired && <span>You must provide a title</span>}\n                    <textarea\n                        className=\"body-input\"\n                        type=\"text\"\n                        placeholder=\"Text(Optional)\"\n                        name=\"body\"\n                        {...register(\"body\")} \n                    />\n                    <input\n                        className=\"form-button\"\n                        value=\"POST\"\n                        type=\"submit\"\n                    />\n                </form>\n            </div>\n\t\t</div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tstate,\n\t\tisAuthenticated: state.auth.isAuthenticated,\n\t};\n}\n\nexport default connect(mapStateToProps, {createPost})(Create);"]},"metadata":{},"sourceType":"module"}