{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/side-bar/user-profile/UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport moment from 'moment';\nimport './UserProfile.css';\nimport Button from '../../../../button/Button';\nimport { RiCake2Line } from 'react-icons/all';\nimport Avatar from \"../../../../../assets/avatar_default.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserProfile() {\n  _s();\n\n  // Get user profile join date \n  const date_joined = useSelector(state => state.posts.userPosts.date);\n  const date_joined_updated = date_joined.substring(1, date_joined.length - 1); // Get user profile followers\n\n  const followers = useSelector(state => state.posts.userPosts.followers); // Get user profile following\n\n  const following = useSelector(state => state.posts.userPosts.following); // Get user profile username\n\n  const username = useSelector(state => state.posts.userPosts.username); // Get logged in user id \n\n  const user_id = useSelector(state => state.auth.user.id); // Get profile user id from url\n\n  const {\n    id\n  } = useParams(); // On load, check relationship between logged in user and profile user.\n\n  const [follower, setFollower] = useState(false);\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:8000/api/follow-user/${user_id}/${id}`).then(res => {\n      console.log(res.data);\n\n      if (res.data == \"true\") {\n        setFollower(true);\n      } else {\n        setFollower(false);\n      }\n    }).catch(err => console.log(err));\n  }, []); // When follow or unfollow button is clicked, send PUT request to updated DB. \n\n  const followUnfollow = action => {\n    const action_type = {\n      title: \"This is an example title\"\n    };\n    console.log(action_type);\n    axios.post(`http://127.0.0.1:8000/api/follow-user/${user_id}/${id}`, action_type).then(res => {\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-picture\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Avatar,\n          alt: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-username\",\n          children: [\"u/\", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cake-day\",\n      children: [/*#__PURE__*/_jsxDEV(RiCake2Line, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Cake day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 22\n        }, this), \" \", moment(date_joined_updated).format('MMMM Do YYYY, h:mm a')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"follower-following\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: following\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 26\n        }, this), \" Following, \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: followers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 56\n        }, this), \"  Followers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"follow-unfollow\",\n      children: user_id == id ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/submit\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => followUnfollow(\"follow\"),\n          type: \"button\",\n          buttonStyle: \"btn--primary\",\n          buttonSize: \"btn--small\",\n          children: \"New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this) : follower ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => followUnfollow(\"unfollow\"),\n        type: \"button\",\n        buttonStyle: \"btn--primary\",\n        buttonSize: \"btn--small\",\n        children: \"Unfollow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => console.log(\"Unfollow button clicked\"),\n        type: \"button\",\n        buttonStyle: \"btn--primary\",\n        buttonSize: \"btn--small\",\n        children: \"Follow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserProfile, \"Ow/dViLiotiaNuZ3HT0kc7vZGRo=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useParams];\n});\n\n_c = UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/side-bar/user-profile/UserProfile.js"],"names":["axios","React","useState","useEffect","Fragment","useParams","Link","useSelector","moment","Button","RiCake2Line","Avatar","UserProfile","date_joined","state","posts","userPosts","date","date_joined_updated","substring","length","followers","following","username","user_id","auth","user","id","follower","setFollower","get","then","res","console","log","data","catch","err","followUnfollow","action","action_type","title","post","format","marginLeft"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useSelector } from 'react-redux'\nimport moment from 'moment'\n\nimport './UserProfile.css'\n\nimport Button from '../../../../button/Button'\nimport { RiCake2Line } from 'react-icons/all'\n\nimport Avatar from \"../../../../../assets/avatar_default.png\"\n\nexport default function UserProfile() {\n\n    // Get user profile join date \n    const date_joined = useSelector((state) => state.posts.userPosts.date)\n    const date_joined_updated = date_joined.substring(1, date_joined.length-1);\n\n    // Get user profile followers\n    const followers = useSelector((state) => state.posts.userPosts.followers)\n\n    // Get user profile following\n    const following = useSelector((state) => state.posts.userPosts.following)\n\n    // Get user profile username\n    const username = useSelector((state) => state.posts.userPosts.username)\n\n    // Get logged in user id \n    const user_id = useSelector((state) => state.auth.user.id);\n\n    // Get profile user id from url\n    const { id } = useParams()\n\n    // On load, check relationship between logged in user and profile user.\n    const [follower, setFollower] = useState(false);\n\n    useEffect(() => {\n        axios\n            .get(`http://127.0.0.1:8000/api/follow-user/${user_id}/${id}`)\n            .then(res => {\n                console.log(res.data)\n\n                if (res.data == \"true\") {\n                    setFollower(true)\n                } else {\n                    setFollower(false)\n                }\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n    // When follow or unfollow button is clicked, send PUT request to updated DB. \n    \n    const followUnfollow = (action) => {\n\n        const action_type = {title: \"This is an example title\" };\n\n        console.log(action_type)\n\n        axios\n            .post(`http://127.0.0.1:8000/api/follow-user/${user_id}/${id}`, action_type)\n            .then(res => {\n                console.log(res.data)\n            })\n            .catch(err => console.log(err));\n    }\n\n\n    return (\n        <div className=\"user-profile\">\n            <div className=\"header\">\n                <div className=\"profile-picture\">\n                <img src={Avatar} alt=\"avatar\"/>\n                    <div className=\"profile-username\">\n                        u/{username}\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"cake-day\">\n                <RiCake2Line/> &nbsp;\n                <div><b>Cake day</b> {moment(date_joined_updated).format('MMMM Do YYYY, h:mm a')}</div>\n            </div>\n            <div className=\"follower-following\">\n                    <div><b>{following}</b> Following, </div>\n                    <div style={{marginLeft: \"10px\"}}> <b>{followers}</b>  Followers</div>\n                </div>\n            <div className=\"follow-unfollow\">\n\n                {user_id == id ?\n                    <Link to=\"/submit\">\n                        <Button\n                            onClick={() => followUnfollow(\"follow\")}\n                            type=\"button\"\n                            buttonStyle=\"btn--primary\"\n                            buttonSize=\"btn--small\"\n                        >\n                            New Post\n                        </Button> \n                    </Link> :\n\n                    \n                    follower ? <Button\n                        onClick={() => followUnfollow(\"unfollow\")}\n                        type=\"button\"\n                        buttonStyle=\"btn--primary\"\n                        buttonSize=\"btn--small\"\n                    >\n                        Unfollow\n                    </Button> : \n                    <Button\n                        onClick={()=>console.log(\"Unfollow button clicked\")}\n                        type=\"button\"\n                        buttonStyle=\"btn--primary\"\n                        buttonSize=\"btn--small\"\n                    >\n                        Follow\n                    </Button>\n                    \n                }\n\n                \n                \n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}