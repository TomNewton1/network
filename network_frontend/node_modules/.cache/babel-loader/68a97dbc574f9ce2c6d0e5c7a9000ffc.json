{"ast":null,"code":"import axios from\"axios\";import{USER_LOADED,USER_LOADING,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,REGISTER_SUCCESS,REGISTER_FAIL,LOGOUT_SUCCESS}from'./types';// Check token and load user\nexport var loadUser=function loadUser(){return function(dispatch,getState){// User loadin \ndispatch({type:USER_LOADING});// Get token from state\nvar token=getState().auth.token;// Headers \nvar config={headers:{\"Content-Type\":\"application/json\"}};// If token, add to headers config\nif(token){config.headers['Authorization']=\"Token \".concat(token);}else{console.log(\"Could not access auth token...\");}axios.get('http://127.0.0.1:8000/api/auth/user',config).then(function(res){dispatch({type:USER_LOADED,payload:res.data});}).catch(function(err){console.log(\"authentication error\");dispatch({type:AUTH_ERROR});});};};//LOGIN User\nexport var login=function login(username,password){return function(dispatch){// Headers \nvar config={headers:{\"Content-Type\":\"application/json\"}};// Request Body \nvar body=JSON.stringify({username:username,password:password});axios.post('http://127.0.0.1:8000/api/auth/login',body,config).then(function(res){dispatch({type:LOGIN_SUCCESS,payload:res.data});}).catch(function(err){console.log(\"authentication error\");dispatch({type:LOGIN_FAIL});});};};// Register User\nexport var register=function register(_ref){var username=_ref.username,password=_ref.password,email=_ref.email;return function(dispatch){//Headers\nvar config={headers:{\"Content-Type\":\"application/json\"}};// Request Body\nvar body=JSON.stringify({username:username,email:email,password:password});axios.post('http://127.0.0.1:8000/api/auth/register',body,config).then(function(res){dispatch({type:REGISTER_SUCCESS,payload:res.data});}).catch(function(err){console.log(\"registration error\");dispatch({type:REGISTER_FAIL});});};};// Logout User \nexport var logout=function logout(){return function(dispatch,getState){console.log(\"logout function called\");// Get token from state\nvar token=getState().auth.token;// Headers \nvar config={headers:{\"Content-Type\":\"application/json\"}};// If token, add to headers config\nif(token){config.headers['Authorization']=\"Token \".concat(token);}axios.post('http://127.0.0.1:8000/api/auth/logout',null,config).then(function(res){dispatch({type:LOGOUT_SUCCESS,payload:res.data});}).catch(function(err){console.log(\"logout error\");});};};// Setup config with token - helper function\nexport var tokenConfig=function tokenConfig(getState){// Get token from state\nvar token=getState().auth.token;// Headers\nvar config={headers:{'Content-Type':'application/json'}};// If token, add to headers config\nif(token){config.headers['Authorization']=\"Token \".concat(token);}return config;};// Setup config with token - helper function\nexport var tokenConfigHooks=function tokenConfigHooks(token){// Headers\nvar config={headers:{'Content-Type':'application/json'}};// If token, add to headers config\nif(token){config.headers['Authorization']=\"Token \".concat(token);}return config;};","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/project4/network_frontend/src/actions/auth.js"],"names":["axios","USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_SUCCESS","REGISTER_FAIL","LOGOUT_SUCCESS","loadUser","dispatch","getState","type","token","auth","config","headers","console","log","get","then","res","payload","data","catch","err","login","username","password","body","JSON","stringify","post","register","email","logout","tokenConfig","tokenConfigHooks"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OACIC,WADJ,CAEIC,YAFJ,CAGIC,UAHJ,CAIIC,aAJJ,CAKIC,UALJ,CAMIC,gBANJ,CAOIC,aAPJ,CAQIC,cARJ,KASO,SATP,CAYA;AAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAM,UAACC,QAAD,CAAWC,QAAX,CAAwB,CAClD;AACAD,QAAQ,CAAE,CAAEE,IAAI,CAAEV,YAAR,CAAF,CAAR,CAEA;AACA,GAAMW,CAAAA,KAAK,CAAGF,QAAQ,GAAGG,IAAX,CAAgBD,KAA9B,CAEA;AACA,GAAME,CAAAA,MAAM,CAAG,CACXC,OAAO,CAAG,CACN,eAAgB,kBADV,CADC,CAAf,CAMA;AACA,GAAGH,KAAH,CAAU,CACNE,MAAM,CAACC,OAAP,CAAe,eAAf,kBAA2CH,KAA3C,EACH,CAFD,IAEO,CACHI,OAAO,CAACC,GAAR,CAAY,gCAAZ,EACH,CAEDlB,KAAK,CAACmB,GAAN,CAAU,qCAAV,CAAiDJ,MAAjD,EACKK,IADL,CACU,SAAAC,GAAG,CAAI,CACTX,QAAQ,CAAC,CACLE,IAAI,CAAEX,WADD,CAELqB,OAAO,CAAED,GAAG,CAACE,IAFR,CAAD,CAAR,CAIH,CANL,EAMOC,KANP,CAMa,SAAAC,GAAG,CAAI,CACZR,OAAO,CAACC,GAAR,CAAY,sBAAZ,EACAR,QAAQ,CAAC,CACLE,IAAI,CAAET,UADD,CAAD,CAAR,CAGH,CAXL,EAYH,CAjCuB,EAAjB,CAmCP;AAEA,MAAO,IAAMuB,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,QAAD,CAAWC,QAAX,QAAwB,UAAClB,QAAD,CAAc,CAEvD;AACA,GAAMK,CAAAA,MAAM,CAAG,CACXC,OAAO,CAAG,CACN,eAAgB,kBADV,CADC,CAAf,CAMA;AACA,GAAMa,CAAAA,IAAI,CAAGC,IAAI,CAACC,SAAL,CAAe,CAACJ,QAAQ,CAARA,QAAD,CAAWC,QAAQ,CAARA,QAAX,CAAf,CAAb,CAEA5B,KAAK,CACAgC,IADL,CACU,sCADV,CACkDH,IADlD,CACwDd,MADxD,EAEKK,IAFL,CAEU,SAACC,GAAD,CAAS,CACXX,QAAQ,CAAC,CACLE,IAAI,CAAER,aADD,CAELkB,OAAO,CAAED,GAAG,CAACE,IAFR,CAAD,CAAR,CAIH,CAPL,EAQKC,KARL,CAQW,SAACC,GAAD,CAAS,CACZR,OAAO,CAACC,GAAR,CAAY,sBAAZ,EACAR,QAAQ,CAAC,CACLE,IAAI,CAAEP,UADD,CAAD,CAAR,CAGH,CAbL,EAeH,CA3BoB,EAAd,CA6BP;AAEA,MAAO,IAAM4B,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,UAAEN,CAAAA,QAAF,MAAEA,QAAF,CAAYC,QAAZ,MAAYA,QAAZ,CAAsBM,KAAtB,MAAsBA,KAAtB,OAAiC,UAACxB,QAAD,CAAc,CAEnE;AACA,GAAMK,CAAAA,MAAM,CAAG,CACXC,OAAO,CAAG,CACN,eAAgB,kBADV,CADC,CAAf,CAMA;AACA,GAAMa,CAAAA,IAAI,CAAGC,IAAI,CAACC,SAAL,CAAe,CAACJ,QAAQ,CAARA,QAAD,CAAWO,KAAK,CAALA,KAAX,CAAkBN,QAAQ,CAARA,QAAlB,CAAf,CAAb,CAEA5B,KAAK,CACAgC,IADL,CACU,yCADV,CACqDH,IADrD,CAC2Dd,MAD3D,EAEKK,IAFL,CAEU,SAACC,GAAD,CAAS,CACXX,QAAQ,CAAC,CACLE,IAAI,CAAEN,gBADD,CAELgB,OAAO,CAAED,GAAG,CAACE,IAFR,CAAD,CAAR,CAIH,CAPL,EAQKC,KARL,CAQW,SAACC,GAAD,CAAS,CACZR,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACAR,QAAQ,CAAC,CACLE,IAAI,CAAEL,aADD,CAAD,CAAR,CAGH,CAbL,EAcH,CA1BuB,EAAjB,CA4BP;AAEA,MAAO,IAAM4B,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAM,UAACzB,QAAD,CAAWC,QAAX,CAAwB,CAEhDM,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAEA;AACA,GAAML,CAAAA,KAAK,CAAGF,QAAQ,GAAGG,IAAX,CAAgBD,KAA9B,CAEA;AACA,GAAME,CAAAA,MAAM,CAAG,CACXC,OAAO,CAAG,CACN,eAAgB,kBADV,CADC,CAAf,CAMA;AACA,GAAIH,KAAJ,CAAW,CACPE,MAAM,CAACC,OAAP,CAAe,eAAf,kBAA2CH,KAA3C,EACH,CAEDb,KAAK,CACAgC,IADL,CACU,uCADV,CACmD,IADnD,CAC0DjB,MAD1D,EAEKK,IAFL,CAEU,SAAAC,GAAG,CAAI,CACTX,QAAQ,CAAC,CACLE,IAAI,CAAEJ,cADD,CAELc,OAAO,CAAED,GAAG,CAACE,IAFR,CAAD,CAAR,CAIH,CAPL,EAOOC,KAPP,CAOa,SAAAC,GAAG,CAAI,CACZR,OAAO,CAACC,GAAR,CAAY,cAAZ,EACH,CATL,EAWH,CA9BqB,EAAf,CAgCP;AAEA,MAAO,IAAMkB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACzB,QAAD,CAAc,CAErC;AACA,GAAME,CAAAA,KAAK,CAAGF,QAAQ,GAAGG,IAAX,CAAgBD,KAA9B,CAEA;AACA,GAAME,CAAAA,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,eAAgB,kBADT,CADI,CAAf,CAMA;AACA,GAAIH,KAAJ,CAAW,CACTE,MAAM,CAACC,OAAP,CAAe,eAAf,kBAA2CH,KAA3C,EACD,CAED,MAAOE,CAAAA,MAAP,CACD,CAlBI,CAoBP;AAEA,MAAO,IAAMsB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACxB,KAAD,CAAW,CAEvC;AACA,GAAME,CAAAA,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,eAAgB,kBADT,CADI,CAAf,CAMA;AACA,GAAIH,KAAJ,CAAW,CACTE,MAAM,CAACC,OAAP,CAAe,eAAf,kBAA2CH,KAA3C,EACD,CAED,MAAOE,CAAAA,MAAP,CACD,CAfI","sourcesContent":["import axios from \"axios\";\n\nimport {\n    USER_LOADED, \n    USER_LOADING, \n    AUTH_ERROR,\n    LOGIN_SUCCESS, \n    LOGIN_FAIL,\n    REGISTER_SUCCESS, \n    REGISTER_FAIL,\n    LOGOUT_SUCCESS\n} from './types'\n\n\n// Check token and load user\n\nexport const loadUser = () => (dispatch, getState) => {\n    // User loadin \n    dispatch ({ type: USER_LOADING })\n\n    // Get token from state\n    const token = getState().auth.token\n\n    // Headers \n    const config = {\n        headers : {\n            \"Content-Type\": \"application/json\"\n        }\n    }\n\n    // If token, add to headers config\n    if(token) {\n        config.headers['Authorization'] = `Token ${token}`;\n    } else {\n        console.log(\"Could not access auth token...\")\n    }\n\n    axios.get('http://127.0.0.1:8000/api/auth/user', config)\n        .then(res => {\n            dispatch({\n                type: USER_LOADED,\n                payload: res.data\n            });\n        }).catch(err => {\n            console.log(\"authentication error\")\n            dispatch({\n                type: AUTH_ERROR\n            })\n        })\n}\n\n//LOGIN User\n\nexport const login = (username, password) => (dispatch) => {\n\n    // Headers \n    const config = {\n        headers : {\n            \"Content-Type\": \"application/json\"\n        }\n    }\n\n    // Request Body \n    const body = JSON.stringify({username, password})\n\n    axios\n        .post('http://127.0.0.1:8000/api/auth/login', body, config)\n        .then((res) => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n            });\n        })\n        .catch((err) => {\n            console.log(\"authentication error\")\n            dispatch({\n                type: LOGIN_FAIL\n            });\n        });\n    \n};\n\n// Register User\n\nexport const register = ({username, password, email}) => (dispatch) => {\n\n    //Headers\n    const config = {\n        headers : {\n            \"Content-Type\": \"application/json\"\n        }\n    }\n\n    // Request Body\n    const body = JSON.stringify({username, email, password})\n\n    axios\n        .post('http://127.0.0.1:8000/api/auth/register', body, config)\n        .then((res) => {\n            dispatch({\n                type: REGISTER_SUCCESS, \n                payload: res.data\n            });\n        })\n        .catch((err) => {\n            console.log(\"registration error\")\n            dispatch({\n                type: REGISTER_FAIL\n            });\n        });\n};\n\n// Logout User \n\nexport const logout = () => (dispatch, getState) => {\n\n    console.log(\"logout function called\")\n\n    // Get token from state\n    const token = getState().auth.token;\n\n    // Headers \n    const config = {\n        headers : {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n    // If token, add to headers config\n    if (token) {\n        config.headers['Authorization'] = `Token ${token}`;\n    }\n\n    axios\n        .post('http://127.0.0.1:8000/api/auth/logout', null,  config)\n        .then(res => {\n            dispatch({\n                type: LOGOUT_SUCCESS,\n                payload: res.data\n            });\n        }).catch(err => {\n            console.log(\"logout error\")\n        })\n    \n}\n\n// Setup config with token - helper function\n\nexport const tokenConfig = (getState) => {\n\n    // Get token from state\n    const token = getState().auth.token;\n  \n    // Headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n  \n    // If token, add to headers config\n    if (token) {\n      config.headers['Authorization'] = `Token ${token}`;\n    }\n  \n    return config;\n  };\n\n// Setup config with token - helper function\n\nexport const tokenConfigHooks = (token) => {\n\n    // Headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n  \n    // If token, add to headers config\n    if (token) {\n      config.headers['Authorization'] = `Token ${token}`;\n    }\n  \n    return config;\n  };"]},"metadata":{},"sourceType":"module"}