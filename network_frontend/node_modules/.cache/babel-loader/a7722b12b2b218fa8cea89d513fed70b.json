{"ast":null,"code":"import _objectSpread from\"/Users/thomasnewton/Desktop/project4/network_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{useForm}from\"react-hook-form\";import{connect}from\"react-redux\";import{useHistory}from\"react-router\";import{createPost}from\"../../actions/posts\";import\"./Create.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function Create(_ref){var state=_ref.state,createPost=_ref.createPost;var history=useHistory();var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.formState.errors;var onSubmit=function onSubmit(data){createPost(state.auth.user.id,state.auth.user.username,data.title,data.body);history.push(\"/\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"create-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create Post\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"form-container\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"form-group\",onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({className:\"title-input\",type:\"text\",placeholder:\"Title\",name:\"title\"},register(\"title\",{required:true}))),errors.titleRequired&&/*#__PURE__*/_jsx(\"span\",{children:\"You must provide a title\"}),/*#__PURE__*/_jsx(\"textarea\",_objectSpread({className:\"body-input\",type:\"text\",placeholder:\"Text(Optional)\",name:\"body\"},register(\"body\"))),/*#__PURE__*/_jsx(\"input\",{className:\"form-button\",value:\"POST\",type:\"submit\"})]})})]});}function mapStateToProps(state){return{state:state,auth:state.auth,isAuthenticated:state.auth.isAuthenticated};}export default connect(mapStateToProps,{createPost:createPost})(Create);","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/project4/network_frontend/src/components/create/Create.js"],"names":["React","useForm","connect","useHistory","createPost","Create","state","history","register","handleSubmit","errors","formState","onSubmit","data","auth","user","id","username","title","body","push","required","titleRequired","mapStateToProps","isAuthenticated"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,cAA3B,CAEA,OAASC,UAAT,KAA2B,qBAA3B,CAEA,MAAO,cAAP,C,wFAEA,MAAO,SAASC,CAAAA,MAAT,MAAqC,IAApBC,CAAAA,KAAoB,MAApBA,KAAoB,CAAbF,UAAa,MAAbA,UAAa,CAExC,GAAMG,CAAAA,OAAO,CAAGJ,UAAU,EAA1B,CAEH,aAAyDF,OAAO,EAAhE,CAAQO,QAAR,UAAQA,QAAR,CAAkBC,YAAlB,UAAkBA,YAAlB,CAA6CC,MAA7C,UAAgCC,SAAhC,CAA6CD,MAA7C,CAEA,GAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CACpBT,UAAU,CAACE,KAAK,CAACQ,IAAN,CAAWC,IAAX,CAAgBC,EAAjB,CAAqBV,KAAK,CAACQ,IAAN,CAAWC,IAAX,CAAgBE,QAArC,CAA+CJ,IAAI,CAACK,KAApD,CAA2DL,IAAI,CAACM,IAAhE,CAAV,CACAZ,OAAO,CAACa,IAAR,CAAa,GAAb,EACH,CAHJ,CAKA,mBACC,aAAK,SAAS,CAAC,kBAAf,wBACC,mCADD,cAEC,aAFD,cAGU,YAAK,SAAS,CAAC,gBAAf,uBACI,cAAM,SAAS,CAAC,YAAhB,CAA6B,QAAQ,CAAEX,YAAY,CAACG,QAAD,CAAnD,wBACI,4BACI,SAAS,CAAC,aADd,CAEI,IAAI,CAAC,MAFT,CAGI,WAAW,CAAC,OAHhB,CAII,IAAI,CAAC,OAJT,EAKQJ,QAAQ,CAAC,OAAD,CAAU,CAAEa,QAAQ,CAAE,IAAZ,CAAV,CALhB,EADJ,CAQKX,MAAM,CAACY,aAAP,eAAwB,kDAR7B,cASI,+BACI,SAAS,CAAC,YADd,CAEI,IAAI,CAAC,MAFT,CAGI,WAAW,CAAC,gBAHhB,CAII,IAAI,CAAC,MAJT,EAKQd,QAAQ,CAAC,MAAD,CALhB,EATJ,cAgBI,cACI,SAAS,CAAC,aADd,CAEI,KAAK,CAAC,MAFV,CAGI,IAAI,CAAC,QAHT,EAhBJ,GADJ,EAHV,GADD,CA8BA,CAED,QAASe,CAAAA,eAAT,CAAyBjB,KAAzB,CAAgC,CAC/B,MAAO,CACNA,KAAK,CAALA,KADM,CAEAQ,IAAI,CAAER,KAAK,CAACQ,IAFZ,CAGNU,eAAe,CAAElB,KAAK,CAACQ,IAAN,CAAWU,eAHtB,CAAP,CAKA,CAED,cAAetB,CAAAA,OAAO,CAACqB,eAAD,CAAkB,CAACnB,UAAU,CAAVA,UAAD,CAAlB,CAAP,CAAuCC,MAAvC,CAAf","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\nimport { createPost } from \"../../actions/posts\";\n\nimport \"./Create.css\"\n\nexport function Create({state, createPost}) {\n\n    const history = useHistory();\n\n\tconst { register, handleSubmit, formState: { errors }} = useForm();\n\n\tconst onSubmit = (data) => {\n        createPost(state.auth.user.id, state.auth.user.username, data.title, data.body)\n        history.push(\"/\")\n    }\n\n\treturn (\n\t\t<div className=\"create-container\">\n\t\t\t<h3>Create Post</h3>\n\t\t\t<hr />\n            <div className=\"form-container\">\n                <form className=\"form-group\" onSubmit={handleSubmit(onSubmit)}>\n                    <input\n                        className=\"title-input\"\n                        type=\"text\" \n                        placeholder=\"Title\" \n                        name=\"title\"\n                        {...register(\"title\", { required: true })}\n                    />\n                    {errors.titleRequired && <span>You must provide a title</span>}\n                    <textarea\n                        className=\"body-input\"\n                        type=\"text\"\n                        placeholder=\"Text(Optional)\"\n                        name=\"body\"\n                        {...register(\"body\")} \n                    />\n                    <input\n                        className=\"form-button\"\n                        value=\"POST\"\n                        type=\"submit\"\n                    />\n                </form>\n            </div>\n\t\t</div>\n\t);\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tstate,\n        auth: state.auth,\n\t\tisAuthenticated: state.auth.isAuthenticated,\n\t};\n}\n\nexport default connect(mapStateToProps, {createPost})(Create);"]},"metadata":{},"sourceType":"module"}