{"ast":null,"code":"import axios from \"axios\";\nimport { GET_POSTS, CREATE_POST, LIKE_POST, GET_FOLLOWING_POSTS } from \"./types\";\nimport { tokenConfig } from './auth'; //Get All Posts\n\nexport const getPosts = () => (dispatch, getState) => {\n  axios.get('http://127.0.0.1:8000/api/post-list/', tokenConfig(getState)).then(res => {\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; //Get All Posts form users the user follows\n\nexport const getFollowerPosts = user_id => (dispatch, getState) => {\n  axios.get(`http://127.0.0.1:8000/api/post-list-followers/${user_id}`, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: GET_FOLLOWING_POSTS,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Create Post\n\nexport const createPost = (user, title, body) => (dispatch, getState) => {\n  // Request Body\n  const requestBody = JSON.stringify({\n    user,\n    title,\n    body\n  });\n  axios.post('http://127.0.0.1:8000/api/post-submit/', requestBody, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: CREATE_POST,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Vote Post\n\nexport const votePost = (user, post, type) => (dispatch, getState) => {\n  // Request Body\n  const requestBody = JSON.stringify({\n    user,\n    post,\n    type\n  });\n  axios.put('http://127.0.0.1:8000/api/post-vote/', requestBody, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: LIKE_POST,\n      payload: res.data\n    });\n    console.log(res);\n  }).catch(err => console.log(err));\n}; // Edit Post\n// Delete Post","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/network_frontend/src/actions/posts.js"],"names":["axios","GET_POSTS","CREATE_POST","LIKE_POST","GET_FOLLOWING_POSTS","tokenConfig","getPosts","dispatch","getState","get","then","res","type","payload","data","catch","err","console","log","getFollowerPosts","user_id","createPost","user","title","body","requestBody","JSON","stringify","post","votePost","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,EAA4CC,mBAA5C,QAAuE,SAAvE;AACA,SAASC,WAAT,QAA4B,QAA5B,C,CAEA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAElDR,EAAAA,KAAK,CACAS,GADL,CACS,sCADT,EACiDJ,WAAW,CAACG,QAAD,CAD5D,EAEKE,IAFL,CAEUC,GAAG,IAAI;AACTJ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEX,SADD;AAELY,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GAPL,EAOOC,KAPP,CAOaC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPpB;AASH,CAXM,C,CAcP;;AAEA,OAAO,MAAMG,gBAAgB,GAAIC,OAAD,IAAa,CAACb,QAAD,EAAWC,QAAX,KAAwB;AAEjER,EAAAA,KAAK,CACAS,GADL,CACU,iDAAgDW,OAAQ,EADlE,EACqEf,WAAW,CAACG,QAAD,CADhF,EAEKE,IAFL,CAEUC,GAAG,IAAI;AACTJ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAER,mBADD;AAELS,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GAPL,EAOOC,KAPP,CAOaC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPpB;AASH,CAXM,C,CAcP;;AAEA,OAAO,MAAMK,UAAU,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,IAAd,KAAuB,CAACjB,QAAD,EAAWC,QAAX,KAAwB;AAGrE;AACH,QAAMiB,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEL,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAApB;AAGGxB,EAAAA,KAAK,CACF4B,IADH,CACQ,wCADR,EACkDH,WADlD,EAC+DpB,WAAW,CAACG,QAAD,CAD1E,EAEGE,IAFH,CAESC,GAAD,IAAS;AACbJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEV,WADC;AAEPW,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GAPH,EAOKC,KAPL,CAOWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPlB;AASD,CAhBI,C,CAmBP;;AAEA,OAAO,MAAMa,QAAQ,GAAG,CAACP,IAAD,EAAOM,IAAP,EAAahB,IAAb,KAAsB,CAACL,QAAD,EAAWC,QAAX,KAAwB;AAElE;AACH,QAAMiB,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACL,IAAAA,IAAD;AAAOM,IAAAA,IAAP;AAAahB,IAAAA;AAAb,GAAf,CAApB;AAEGZ,EAAAA,KAAK,CACA8B,GADL,CACS,sCADT,EACiDL,WADjD,EAC8DpB,WAAW,CAACG,QAAD,CADzE,EAEKE,IAFL,CAEWC,GAAD,IAAS;AACXJ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAET,SADD;AAELU,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,KAAD,CAAR;AAIAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH,GARL,EASKI,KATL,CASWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATlB;AAWH,CAhBM,C,CAmBP;AAGA","sourcesContent":["import axios from \"axios\";\nimport { GET_POSTS, CREATE_POST, LIKE_POST, GET_FOLLOWING_POSTS } from \"./types\";\nimport { tokenConfig } from './auth';\n\n//Get All Posts\n\nexport const getPosts = () => (dispatch, getState) => {\n\n    axios\n        .get('http://127.0.0.1:8000/api/post-list/', tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_POSTS,\n                payload: res.data\n            });\n        }).catch(err => console.log(err));\n       \n}\n\n\n//Get All Posts form users the user follows\n\nexport const getFollowerPosts = (user_id) => (dispatch, getState) => {\n\n    axios\n        .get(`http://127.0.0.1:8000/api/post-list-followers/${user_id}`, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_FOLLOWING_POSTS,\n                payload: res.data\n            });\n        }).catch(err => console.log(err));\n       \n}\n\n\n// Create Post\n\nexport const createPost = (user, title, body) => (dispatch, getState) => {\n    \n\n    // Request Body\n\tconst requestBody = JSON.stringify({ user, title, body });\n\n\n    axios\n      .post('http://127.0.0.1:8000/api/post-submit/', requestBody, tokenConfig(getState))\n      .then((res) => {\n        dispatch({\n          type: CREATE_POST,\n          payload: res.data,\n        });\n      }).catch(err => console.log(err));\n    \n  };\n\n\n// Vote Post\n\nexport const votePost = (user, post, type) => (dispatch, getState) => {\n\n    // Request Body\n\tconst requestBody = JSON.stringify({user, post, type});\n\n    axios\n        .put('http://127.0.0.1:8000/api/post-vote/', requestBody, tokenConfig(getState) )\n        .then((res) => {\n            dispatch({\n                type: LIKE_POST,\n                payload: res.data,\n            });\n            console.log(res)\n        })\n        .catch(err => console.log(err));\n\n};\n\n\n// Edit Post\n\n\n// Delete Post\n\n"]},"metadata":{},"sourceType":"module"}