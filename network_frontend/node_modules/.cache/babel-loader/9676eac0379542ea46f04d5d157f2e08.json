{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/main-bar/posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport Pagination from \"../../../../pagination/Pagination\";\nimport { getPosts } from \"../../../../../actions/posts\";\nimport Test from \"./Test\";\nimport \"./posts.css\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Posts({\n  state,\n  getPosts\n}) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const posts = useSelector(state => state.posts.posts); // This currently just gets all posts. Later I will need to change this to just get posts the users followed.\n\n  /*\n     useEffect(() => {\n  \tgetPosts()\n  }, []);\n     */\n\n  console.log(\"Posts are:\", posts);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {\n            className: \"upvote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this), \"Vote\", /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {\n            className: \"downvote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-mainbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-author\",\n            children: [\"Posted by user: \", post.user]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-title\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-body\",\n            children: post.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-footer\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments\",\n              children: \" Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"0bKJa3ldylF5Qd854yaSRRgYctY=\", false, function () {\n  return [useSelector];\n});\n\n_c = Posts;\n\nfunction mapStateToProps(state) {\n  return {\n    state,\n    isAuthenticated: state.auth.isAuthenticated\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/main-bar/posts/Posts.js"],"names":["React","useState","useEffect","Fragment","connect","useSelector","Pagination","getPosts","Test","ArrowUpwardIcon","ArrowDownwardIcon","Posts","state","loading","setLoading","currentPage","setCurrentPage","postsPerPage","posts","console","log","map","post","user","title","body","mapStateToProps","isAuthenticated","auth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AAEA,SAASC,QAAT,QAAyB,8BAAzB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,aAAP;AAEA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;;AAEA,OAAO,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASL,EAAAA;AAAT,CAAf,EAAmC;AAAA;;AAGzC,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACgB,YAAD,IAAiBhB,QAAQ,CAAC,EAAD,CAA/B;AAEG,QAAMiB,KAAK,GAAGb,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACM,KAAN,CAAYA,KAAxB,CAAzB,CAPsC,CAStC;;AACH;AACD;AACA;AACA;AACA;;AAEIC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AAEA,sBACI,QAAC,QAAD;AAAA,cACSA,KAAK,CAACG,GAAN,CAAUC,IAAI,iBACX;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADJ,uBAGI,QAAC,iBAAD;AAAmB,YAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,2CACyBA,IAAI,CAACC,IAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,sBACKD,IAAI,CAACE;AADV;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,sBACKF,IAAI,CAACG;AADV;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH;AADT;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GAlDed,K;UAOEN,W;;;KAPFM,K;;AAqDhB,SAASe,eAAT,CAAyBd,KAAzB,EAAgC;AAC/B,SAAO;AACNA,IAAAA,KADM;AAENe,IAAAA,eAAe,EAAEf,KAAK,CAACgB,IAAN,CAAWD;AAFtB,GAAP;AAKA;;AAED,eAAevB,OAAO,CAACsB,eAAD,EAAkB;AAACnB,EAAAA;AAAD,CAAlB,CAAP,CAAqCI,KAArC,CAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport Pagination from \"../../../../pagination/Pagination\";\n\nimport { getPosts } from \"../../../../../actions/posts\";\n\nimport Test from \"./Test\"\n\nimport \"./posts.css\";\n\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nexport function Posts({ state, getPosts}) {\n\n    \n\tconst [loading, setLoading] = useState(false);\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [postsPerPage] = useState(10);\n\n    const posts = useSelector((state) => state.posts.posts); \n\n    // This currently just gets all posts. Later I will need to change this to just get posts the users followed.\n\t/*\n    useEffect(() => {\n\t\tgetPosts()\n\t}, []);\n    */\n\n    console.log(\"Posts are:\", posts)\n\n    return (\n        <Fragment>\n                {posts.map(post => (\n                    <div className=\"post-wrapper\"> \n                        <div className=\"post\">\n                            <div className=\"post-sidebar\">\n                                <ArrowUpwardIcon className=\"upvote\" />\n                                Vote\n                                <ArrowDownwardIcon className=\"downvote\" />\n                            </div>\n                            <div className=\"post-mainbar\">\n                                <div className=\"post-author\">\n                                        Posted by user: {post.user}\n                                </div>\n                                <div className=\"post-title\">\n                                    {post.title}\n                                </div>\n                                <div className=\"post-body\">\n                                    {post.body}\n                                </div>\n                                <div className=\"post-footer\">\n                                    <div className=\"comments\"> Comments</div>\n                                </div>\n                            </div>\n                            \n                        </div>\n                    </div>\n                ))}\n            </Fragment>\n    )\n\n\n}\n\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tstate,\n\t\tisAuthenticated: state.auth.isAuthenticated,\n        \n\t};\n}\n\nexport default connect(mapStateToProps, {getPosts})(Posts);"]},"metadata":{},"sourceType":"module"}