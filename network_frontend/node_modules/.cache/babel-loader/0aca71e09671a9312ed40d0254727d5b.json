{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnewton/Desktop/network_frontend/src/components/loginModal/LoginModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport reactDom from \"react-dom\";\nimport Login from '../accounts/Login';\nimport Register from '../accounts/Register';\nimport './LoginModal.css';\nimport { CgClose } from 'react-icons/all';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginModal({\n  open,\n  action,\n  onClose,\n  signInState,\n  setSignInState\n}) {\n  _s();\n\n  console.log(\"Action type: \", action);\n  const [modalType, setModalType] = useState(action);\n  useEffect(() => {\n    setModalType(action);\n    console.log(\"modal type\", modalType);\n  }, [modalType]);\n  useEffect(() => {\n    console.log(\"hello\");\n  }, []);\n  if (!open) return null;\n\n  if (signInState.signInType === \"login\") {\n    return /*#__PURE__*/reactDom.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-style\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-style\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-container\",\n            children: [/*#__PURE__*/_jsxDEV(CgClose, {\n              className: \"exit-button\",\n              size: 30,\n              onClick: onClose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-side-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-login\",\n              children: [/*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"New to Reddit? \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  onClick: () => setsignInState({\n                    open: true,\n                    signInType: \"register\"\n                  }),\n                  children: \"Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), document.getElementById('portal'));\n  } else if (signInState.signInType === \"register\") {\n    return /*#__PURE__*/reactDom.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-style\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-style\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-container\",\n            children: [/*#__PURE__*/_jsxDEV(CgClose, {\n              className: \"exit-button\",\n              size: 30,\n              onClick: onClose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-side-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-login\",\n              children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"b\", {\n                onClick: () => setModalType(\"login\"),\n                children: \"Log In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 58\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false), document.getElementById('portal'));\n  }\n}\n\n_s(LoginModal, \"NzDFUQuYqYHRA3SgCz7VvFsrimE=\");\n\n_c = LoginModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/network_frontend/src/components/loginModal/LoginModal.js"],"names":["React","useEffect","useState","reactDom","Login","Register","CgClose","LoginModal","open","action","onClose","signInState","setSignInState","console","log","modalType","setModalType","signInType","createPortal","setsignInState","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport reactDom from \"react-dom\"\nimport Login from '../accounts/Login';\nimport Register from '../accounts/Register';\n\nimport './LoginModal.css'\nimport { CgClose } from 'react-icons/all'\n\nexport default function LoginModal({ open, action, onClose, signInState, setSignInState}) {\n\n    console.log(\"Action type: \", action)\n\n    const [modalType, setModalType] = useState(action);\n\n    useEffect(() => {\n        setModalType(action)\n\t\tconsole.log(\"modal type\", modalType)\n\t}, [modalType]);\n\n    useEffect(() => {\n\t\tconsole.log(\"hello\")\n\t}, []);\n\n    \n    if (!open) return null\n\n    if (signInState.signInType === \"login\") {\n        \n        return reactDom.createPortal(\n            <>\n                    <div className=\"overlay-style\">\n                        <div className=\"modal-style\">\n                            <div className=\"modal-container\">\n                                <CgClose className=\"exit-button\" size={30} onClick={onClose}/>\n                                <div className=\"modal-side-bar\"></div>\n                                <div className=\"modal-login\">\n                                    <Login/>\n                                    <p>\n                                        New to Reddit? <b onClick={() => setsignInState({open: true, signInType: \"register\"})}>Sign Up</b>\n                                    </p>\n                                </div>\n                                \n                            </div>\n                        </div>\n                    </div>\n            </>, \n            document.getElementById('portal')\n        )\n    }\n    else if (signInState.signInType === \"register\") {\n        return reactDom.createPortal(\n            <>\n\n                <div className=\"overlay-style\">\n                    <div className=\"modal-style\">\n                        <div className=\"modal-container\">\n                            <CgClose className=\"exit-button\" size={30} onClick={onClose}/>\n                            <div className=\"modal-side-bar\"></div>\n                            <div className=\"modal-login\">\n                                <Register/>\n        \n                            </div>\n                            <p>\n                                Already have an account? <b onClick={() => setModalType(\"login\")}>Log In</b>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </>, \n            document.getElementById('portal')\n        )\n\n    }\n    \n}\n"]},"metadata":{},"sourceType":"module"}