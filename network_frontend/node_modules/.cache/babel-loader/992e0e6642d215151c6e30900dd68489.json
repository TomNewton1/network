{"ast":null,"code":"import _slicedToArray from\"/Users/thomasnewton/Desktop/project4/network_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axios\";import React,{useState,useEffect}from\"react\";import{useParams,Link}from\"react-router-dom\";import{useSelector,useDispatch}from'react-redux';import moment from'moment';import{getUserPosts}from'../../../../../actions/posts';import'./UserProfile.css';import Button from'../../../../button/Button';import{RiCake2Line}from'react-icons/all';import Avatar from\"../../../../../assets/avatar_default.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function UserProfile(){// Get user profile join date \nvar date_joined=useSelector(function(state){return state.posts.userPosts.date;});var date_joined_updated=date_joined.substring(1,date_joined.length-1);// Get user profile followers\nvar followers=useSelector(function(state){return state.posts.userPosts.followers;});// Get user profile following\nvar following=useSelector(function(state){return state.posts.userPosts.following;});// Get user profile username\nvar username=useSelector(function(state){return state.posts.userPosts.username;});// Get logged in user id \nvar user_id=useSelector(function(state){return state.auth.user.id;});// Get profile user id from url\nvar _useParams=useParams(),id=_useParams.id;// On load, check relationship between logged in user and profile user. Default set to empty string. \nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),follower=_useState2[0],setFollower=_useState2[1];// Get Posts via getPosts function and redux dispatcher\nvar dispatch=useDispatch();// If the user follows/unfollows then reload the user details in Redux \nuseEffect(function(){dispatch(getUserPosts(id));axios.get(\"http://127.0.0.1:8000/api/follow-user/\".concat(user_id,\"/\").concat(id)).then(function(res){if(res.data===\"true\"){setFollower(true);}else{setFollower(false);}}).catch(function(err){return console.log(err);});},[]);var followUnfollow=function followUnfollow(user_id,id,action){// Send action to backend. Action is either \"follow\" or \"unfollow\"\naxios.post(\"http://127.0.0.1:8000/api/follow-user/\".concat(user_id,\"/\").concat(id),{action:action}).then(function(res){console.log(\"Follow/Unfollow response:\",res.data);if(res.data===\"true\"){setFollower(true);}else{setFollower(false);}}).catch(function(err){return console.log(err);});// Get updated user profile (this will upfate follower/following count)\ndispatch(getUserPosts(id));};return/*#__PURE__*/_jsxs(\"div\",{className:\"user-profile\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"profile-picture\",children:[/*#__PURE__*/_jsx(\"img\",{src:Avatar,alt:\"avatar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-username\",children:[\"u/\",username]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"cake-day\",children:[/*#__PURE__*/_jsx(RiCake2Line,{}),\" \\xA0\",/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Cake day\"}),\" \",moment(date_joined_updated).format('MMMM Do YYYY, h:mm a')]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"follower-following\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:following}),\" Following, \"]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:\"10px\"},children:[\" \",/*#__PURE__*/_jsx(\"b\",{children:followers}),\"  Followers\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"follow-unfollow\",children:user_id==id?/*#__PURE__*/_jsx(Link,{to:\"/submit\",children:/*#__PURE__*/_jsx(Button,{type:\"button\",buttonStyle:\"btn--primary\",buttonSize:\"btn--small\",children:\"New Post\"})}):follower?/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return followUnfollow(user_id,id,\"unfollow\");},type:\"button\",buttonStyle:\"btn--primary\",buttonSize:\"btn--small\",children:\"Unfollow\"}):/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return followUnfollow(user_id,id,\"follow\");},type:\"button\",buttonStyle:\"btn--primary\",buttonSize:\"btn--small\",children:\"Follow\"})})]});}","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/project4/network_frontend/src/components/profile/content/side-bar/user-profile/UserProfile.js"],"names":["axios","React","useState","useEffect","useParams","Link","useSelector","useDispatch","moment","getUserPosts","Button","RiCake2Line","Avatar","UserProfile","date_joined","state","posts","userPosts","date","date_joined_updated","substring","length","followers","following","username","user_id","auth","user","id","follower","setFollower","dispatch","get","then","res","data","catch","err","console","log","followUnfollow","action","post","format","marginLeft"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport moment from 'moment'\n\nimport { getUserPosts } from '../../../../../actions/posts';\n\nimport './UserProfile.css'\n\nimport Button from '../../../../button/Button'\nimport { RiCake2Line } from 'react-icons/all'\n\nimport Avatar from \"../../../../../assets/avatar_default.png\"\n\nexport default function UserProfile() {\n    \n    // Get user profile join date \n    const date_joined = useSelector((state) => state.posts.userPosts.date)\n    const date_joined_updated = date_joined.substring(1, date_joined.length-1);\n\n    // Get user profile followers\n    const followers = useSelector((state) => state.posts.userPosts.followers)\n\n    // Get user profile following\n    const following = useSelector((state) => state.posts.userPosts.following)\n\n    // Get user profile username\n    const username = useSelector((state) => state.posts.userPosts.username)\n\n    // Get logged in user id \n    const user_id = useSelector((state) => state.auth.user.id);\n\n    // Get profile user id from url\n    const { id } = useParams()\n\n    // On load, check relationship between logged in user and profile user. Default set to empty string. \n    const [follower, setFollower] = useState(\"\");\n\n\n    // Get Posts via getPosts function and redux dispatcher\n    const dispatch = useDispatch();\n    \n    // If the user follows/unfollows then reload the user details in Redux \n    useEffect(() => {\n        dispatch(getUserPosts(id))\n        axios\n            .get(`http://127.0.0.1:8000/api/follow-user/${user_id}/${id}`)\n            .then(res => {\n                if (res.data === \"true\") {\n                    setFollower(true)\n                } else {\n                    setFollower(false)\n                }\n            })\n     \n            .catch(err => console.log(err));\n\n    }, [])\n\n    const followUnfollow = (user_id, id, action) => {\n\n        // Send action to backend. Action is either \"follow\" or \"unfollow\"\n        axios\n            .post(`http://127.0.0.1:8000/api/follow-user/${user_id}/${id}`, {action} )\n            .then(res => {\n                console.log(\"Follow/Unfollow response:\", res.data)\n                if (res.data === \"true\") {\n                    setFollower(true)\n                } else {\n                    setFollower(false)\n                }\n            })\n            .catch(err => console.log(err));\n        \n        // Get updated user profile (this will upfate follower/following count)\n        dispatch(getUserPosts(id))\n        \n    };\n\n\n    return (\n        <div className=\"user-profile\">\n            <div className=\"header\">\n                <div className=\"profile-picture\">\n                <img src={Avatar} alt=\"avatar\"/>\n                    <div className=\"profile-username\">\n                        u/{username}\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"cake-day\">\n                <RiCake2Line/> &nbsp;\n                <div><b>Cake day</b> {moment(date_joined_updated).format('MMMM Do YYYY, h:mm a')}</div>\n            </div>\n            <div className=\"follower-following\">\n                    <div><b>{following}</b> Following, </div>\n                    <div style={{marginLeft: \"10px\"}}> <b>{followers}</b>  Followers</div>\n                </div>\n            <div className=\"follow-unfollow\">\n                {user_id == id ?\n                    <Link to=\"/submit\">\n                        <Button\n                            type=\"button\"\n                            buttonStyle=\"btn--primary\"\n                            buttonSize=\"btn--small\"\n                        >\n                            New Post\n                        </Button> \n                    </Link> :\n\n                    \n                    follower ?  <Button\n                        onClick={() => followUnfollow(user_id, id, \"unfollow\")}\n                        type=\"button\"\n                        buttonStyle=\"btn--primary\"\n                        buttonSize=\"btn--small\"\n\n                    >\n                        \n                        Unfollow\n                    </Button> : \n                    <Button\n                        onClick={() => followUnfollow(user_id, id, \"follow\")}\n                        type=\"button\"\n                        buttonStyle=\"btn--primary\"\n                        buttonSize=\"btn--small\"\n                    >\n                        Follow\n                    </Button>\n                    \n                }\n\n                \n                \n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}