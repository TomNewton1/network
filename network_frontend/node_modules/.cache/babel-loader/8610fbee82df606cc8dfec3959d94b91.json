{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/main-bar/posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport Pagination from \"../../../../pagination/Pagination\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getPosts } from \"../../../../../actions/posts\";\nimport \"./posts.css\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Posts() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get('http://127.0.0.1:8000/api/post-list/');\n      setPosts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n  console.log(posts); // Get current post \n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [currentPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {\n            className: \"upvote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), \"Vote\", /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {\n            className: \"downvote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-mainbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-author\",\n            children: [\"Posted by user: \", post.user]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-title\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-body\",\n            children: post.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-footer\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments\",\n              children: \" Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: posts.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"+BPBRoyLxN1+E6ocVmhImLmBE6I=\");\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/main-bar/posts/Posts.js"],"names":["React","useState","useEffect","Component","Fragment","axios","Pagination","connect","PropTypes","getPosts","ArrowUpwardIcon","ArrowDownwardIcon","Posts","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","fetchPosts","res","get","data","console","log","indexOfLastPost","indexOfFirstPost","currentPosts","slice","map","post","user","title","body","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component, Fragment} from \"react\";\nimport axios from \"axios\";\nimport Pagination from \"../../../../pagination/Pagination\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getPosts } from \"../../../../../actions/posts\";\n\nimport \"./posts.css\";\n\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\n\n\nexport default function Posts() {\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postsPerPage, setPostsPerPage] = useState(10);\n\n\n    useEffect(()=> {\n        const fetchPosts = async () => {\n            setLoading(true); \n            const res = await axios.get('http://127.0.0.1:8000/api/post-list/');\n            setPosts(res.data);\n            setLoading(false);\n        }\n\n        fetchPosts();\n\n    }, []);\n\n    console.log(posts)\n\n    // Get current post \n    const indexOfLastPost = currentPage * postsPerPage; \n    const indexOfFirstPost = indexOfLastPost - postsPerPage\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost)\n\n\n    return (\n        <Fragment>\n            {currentPosts.map(post => (\n                <div className=\"post-wrapper\"> \n                    <div className=\"post\">\n                        <div className=\"post-sidebar\">\n                            <ArrowUpwardIcon className=\"upvote\" />\n                            Vote\n                            <ArrowDownwardIcon className=\"downvote\" />\n                        </div>\n                        <div className=\"post-mainbar\">\n                            <div className=\"post-author\">\n                                    Posted by user: {post.user}\n                            </div>\n                            <div className=\"post-title\">\n                                {post.title}\n                            </div>\n                            <div className=\"post-body\">\n                                {post.body}\n                            </div>\n                            <div className=\"post-footer\">\n                                <div className=\"comments\"> Comments</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ))}\n            <Pagination postsPerPage={postsPerPage} totalPosts={posts.length}/>\n        </Fragment>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}