{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR } from './types'; // Check token and load user\n\nexport const loadUser = () => (dispatch, getState) => {\n  // User loadin \n  dispatch({\n    type: USER_LOADING\n  }); // Get token from state\n\n  const token = getState().auth.token; // Headers \n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }; // If token, add to headers config\n\n  if (token) {\n    config.headers['Autorization'] = `Token ${token}`;\n  }\n\n  axios.get('http://127.0.0.1:8000/api/auth/user', config).then(res => {\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(\"authentication error\");\n    dispatch({\n      type: AUTH_ERROR\n    });\n  });\n}; //LOGIN User\n\nexport const login = (username, password) => dispatch => {\n  // Headers \n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  axios.get('http://127.0.0.1:8000/api/auth/user', config).then(res => {\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(\"authentication error\");\n    dispatch({\n      type: AUTH_ERROR\n    });\n  });\n};","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/network_frontend/src/actions/auth.js"],"names":["axios","USER_LOADED","USER_LOADING","AUTH_ERROR","loadUser","dispatch","getState","type","token","auth","config","headers","get","then","res","payload","data","catch","err","console","log","login","username","password"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,WADJ,EAEIC,YAFJ,EAGIC,UAHJ,QAIO,SAJP,C,CAOA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAClD;AACAD,EAAAA,QAAQ,CAAE;AAAEE,IAAAA,IAAI,EAAEL;AAAR,GAAF,CAAR,CAFkD,CAIlD;;AACA,QAAMM,KAAK,GAAGF,QAAQ,GAAGG,IAAX,CAAgBD,KAA9B,CALkD,CAOlD;;AACA,QAAME,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAG;AACN,sBAAgB;AADV;AADC,GAAf,CARkD,CAclD;;AACA,MAAGH,KAAH,EAAU;AACNE,IAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAkC,SAAQH,KAAM,EAAhD;AACH;;AAEDR,EAAAA,KAAK,CAACY,GAAN,CAAU,qCAAV,EAAiDF,MAAjD,EACKG,IADL,CACUC,GAAG,IAAI;AACTT,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,WADD;AAELc,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,KAAD,CAAR;AAIH,GANL,EAMOC,KANP,CAMaC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAf,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEJ;AADD,KAAD,CAAR;AAGH,GAXL;AAYH,CA/BM,C,CAiCP;;AAEA,OAAO,MAAMkB,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAyBlB,QAAD,IAAc;AAEvD;AACA,QAAMK,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAG;AACN,sBAAgB;AADV;AADC,GAAf;AAMAX,EAAAA,KAAK,CAACY,GAAN,CAAU,qCAAV,EAAiDF,MAAjD,EACKG,IADL,CACUC,GAAG,IAAI;AACTT,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,WADD;AAELc,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,KAAD,CAAR;AAIH,GANL,EAMOC,KANP,CAMaC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAf,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEJ;AADD,KAAD,CAAR;AAGH,GAXL;AAYH,CArBM","sourcesContent":["import axios from \"axios\";\n\nimport {\n    USER_LOADED, \n    USER_LOADING, \n    AUTH_ERROR\n} from './types'\n\n\n// Check token and load user\n\nexport const loadUser = () => (dispatch, getState) => {\n    // User loadin \n    dispatch ({ type: USER_LOADING })\n\n    // Get token from state\n    const token = getState().auth.token\n\n    // Headers \n    const config = {\n        headers : {\n            \"Content-Type\": \"application/json\"\n        }\n    }\n\n    // If token, add to headers config\n    if(token) {\n        config.headers['Autorization'] = `Token ${token}`;\n    }\n\n    axios.get('http://127.0.0.1:8000/api/auth/user', config)\n        .then(res => {\n            dispatch({\n                type: USER_LOADED,\n                payload: res.data\n            });\n        }).catch(err => {\n            console.log(\"authentication error\")\n            dispatch({\n                type: AUTH_ERROR\n            })\n        })\n}\n\n//LOGIN User\n\nexport const login = (username, password) => (dispatch) => {\n\n    // Headers \n    const config = {\n        headers : {\n            \"Content-Type\": \"application/json\"\n        }\n    }\n\n    axios.get('http://127.0.0.1:8000/api/auth/user', config)\n        .then(res => {\n            dispatch({\n                type: USER_LOADED,\n                payload: res.data\n            });\n        }).catch(err => {\n            console.log(\"authentication error\")\n            dispatch({\n                type: AUTH_ERROR\n            })\n        })\n}"]},"metadata":{},"sourceType":"module"}