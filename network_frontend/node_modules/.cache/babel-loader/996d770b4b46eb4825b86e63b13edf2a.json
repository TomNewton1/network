{"ast":null,"code":"import _slicedToArray from\"/Users/thomasnewton/Desktop/project4/network_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import{useDispatch,connect}from'react-redux';import LoginModal from\"../loginModal/LoginModal\";import\"./Navbar.css\";import{FaRedditSquare,FaReddit}from\"react-icons/fa\";import SearchIcon from\"@material-ui/icons/Search\";import Button from\"../button/Button\";import ArrowDropDownIcon from\"@material-ui/icons/ArrowDropDown\";import DropdownIconMenu from\"./dropdownIconMenu/DropdownIconMenu\";import Reddit_logo from\"../../assets/reddit_logo_red.png\";import{filterPosts}from\"../../actions/filterPosts\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function Navbar(_ref){var state=_ref.state,isAuthenticated=_ref.isAuthenticated;// Sets drop down menu state to open or closed\nvar _useState=useState({showMenu:false}),_useState2=_slicedToArray(_useState,2),dropDownState=_useState2[0],setdropDownState=_useState2[1];var handleMenu=function handleMenu(){setdropDownState({showMenu:!dropDownState.showMenu});};// Get Posts via getPosts function and redux dispathcer\nvar dispatch=useDispatch();// Search term to filer posts. \nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchTerm=_useState4[0],setSearchTerm=_useState4[1];console.log(searchTerm);useEffect(function(){console.log(\"use effect being called\");dispatch(filterPosts(searchTerm));},[searchTerm]);// Check if click was inside dropdown menu\nvar onClickOutsideListener=function onClickOutsideListener(){setdropDownState({showMenu:false});document.removeEventListener(\"click\",onClickOutsideListener);};// Handle State for Modal (checks if user clicked on login or logout)\nvar _useState5=useState({open:false,signInType:\"\"}),_useState6=_slicedToArray(_useState5,2),signInState=_useState6[0],setsignInState=_useState6[1];// setSignInState to closed if the user is authenticated\nuseEffect(function(){setsignInState({open:false});},[isAuthenticated]);var handleLogin=function handleLogin(){setsignInState({open:true,signInType:\"login\"});};var handleRegister=function handleRegister(){setsignInState({open:true,signInType:\"register\"});};if(isAuthenticated){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{onMouseLeave:function onMouseLeave(){document.addEventListener(\"click\",onClickOutsideListener);},children:/*#__PURE__*/_jsxs(\"div\",{className:\"navbar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"logo hoverable\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(FaReddit,{size:35,className:\"navbar-fa-icon\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"reddit\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"searchBar\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"searchBar\",children:/*#__PURE__*/_jsx(SearchIcon,{})}),/*#__PURE__*/_jsx(\"input\",{id:\"searchBar\",placeholder:\"Search Reddit\",onChange:function onChange(event){setSearchTerm(event.target.value);}})]}),/*#__PURE__*/_jsx(\"div\",{onClick:handleMenu,className:\"actions\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:dropDownState.showMenu?\"logged-in-profile-open\":\"logged-in-profile\",children:[/*#__PURE__*/_jsx(FaRedditSquare,{}),/*#__PURE__*/_jsx(\"div\",{className:\"username\",children:state.auth.user.username}),/*#__PURE__*/_jsx(ArrowDropDownIcon,{className:\"hoverable logged-in-arrow\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"logged-in-dropdown-icon-menu\",children:dropDownState.showMenu?/*#__PURE__*/_jsx(DropdownIconMenu,{}):null})]})})]})})});}else{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"navbar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"logo hoverable\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(FaReddit,{size:35,className:\"navbar-fa-icon\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"reddit\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"searchBar\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"searchBar\",children:/*#__PURE__*/_jsx(SearchIcon,{})}),/*#__PURE__*/_jsx(\"input\",{id:\"searchBar\",placeholder:\"Search Reddit\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"actions\",children:[/*#__PURE__*/_jsx(Button,{onClick:handleLogin,type:\"button\",buttonStyle:\"btn--secondary\",buttonSize:\"btn--small\",children:\"Log In\"}),/*#__PURE__*/_jsx(Button,{onClick:handleRegister,type:\"button\",buttonStyle:\"btn--primary\",buttonSize:\"btn--small\",children:\"Sign Up\"})]})]}),/*#__PURE__*/_jsx(LoginModal,{open:signInState.open,action:signInState.signInType,onClose:function onClose(){return setsignInState({open:false});},signInState:signInState,setsignInState:setsignInState})]});}}function mapStateToProps(state){return{state:state,isAuthenticated:state.auth.isAuthenticated};}export default connect(mapStateToProps)(Navbar);","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/project4/network_frontend/src/components/navbar/Navbar.js"],"names":["React","useState","useEffect","Link","useDispatch","connect","LoginModal","FaRedditSquare","FaReddit","SearchIcon","Button","ArrowDropDownIcon","DropdownIconMenu","Reddit_logo","filterPosts","Navbar","state","isAuthenticated","showMenu","dropDownState","setdropDownState","handleMenu","dispatch","searchTerm","setSearchTerm","console","log","onClickOutsideListener","document","removeEventListener","open","signInType","signInState","setsignInState","handleLogin","handleRegister","addEventListener","event","target","value","auth","user","username","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, connect } from 'react-redux'\n\nimport LoginModal from \"../loginModal/LoginModal\";\n\nimport \"./Navbar.css\";\n\nimport { FaRedditSquare, FaReddit } from \"react-icons/fa\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"../button/Button\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport DropdownIconMenu from \"./dropdownIconMenu/DropdownIconMenu\";\n\nimport Reddit_logo from \"../../assets/reddit_logo_red.png\"\n\nimport { filterPosts } from \"../../actions/filterPosts\";\n\nexport function Navbar({ state, isAuthenticated }) {\n\n\t// Sets drop down menu state to open or closed\n\tconst [dropDownState, setdropDownState] = useState({\n\t\tshowMenu: false,\n\t});\n\n\t\n\tconst handleMenu = () => {\n\t\tsetdropDownState({\n\t\t\tshowMenu: !dropDownState.showMenu,\n\t\t});\n\t};\n\n\t// Get Posts via getPosts function and redux dispathcer\n\tconst dispatch = useDispatch();\n\n\t// Search term to filer posts. \n\tconst [searchTerm, setSearchTerm] = useState('')\n\n\tconsole.log(searchTerm)\n\n\tuseEffect(() => {\n\t\tconsole.log(\"use effect being called\")\n\t\tdispatch(filterPosts(searchTerm))\n\t},[searchTerm]);\n\n\n\t// Check if click was inside dropdown menu\n\n\tconst onClickOutsideListener = () => {\n\t\tsetdropDownState({\n\t\t\tshowMenu: false,\n\t\t});\n\t\tdocument.removeEventListener(\"click\", onClickOutsideListener);\n\t};\n\n\t// Handle State for Modal (checks if user clicked on login or logout)\n\n\tconst [signInState, setsignInState] = useState({\n\t\topen: false,\n\t\tsignInType: \"\",\n\t});\n\n\t// setSignInState to closed if the user is authenticated\n\n\tuseEffect(() => {\n\t\tsetsignInState({ open: false });\n\t}, [isAuthenticated]);\n\n\tconst handleLogin = () => {\n\t\tsetsignInState({\n\t\t\topen: true,\n\t\t\tsignInType: \"login\",\n\t\t});\n\t};\n\n\tconst handleRegister = () => {\n\t\tsetsignInState({\n\t\t\topen: true,\n\t\t\tsignInType: \"register\",\n\t\t});\n\t};\n\n\tif (isAuthenticated) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div\n\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\tdocument.addEventListener(\"click\", onClickOutsideListener);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"navbar\">\n\t\t\t\t\t\t<div className=\"logo hoverable\">\n\t\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t\t<FaReddit size={35} className=\"navbar-fa-icon\"/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<span>reddit</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t<div className=\"searchBar\">\n\t\t\t\t\t\t\t<label htmlFor=\"searchBar\">\n\t\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input id=\"searchBar\" placeholder=\"Search Reddit\" onChange={event => {setSearchTerm(event.target.value)}}></input>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div onClick={handleMenu} className=\"actions\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\tdropDownState.showMenu\n\t\t\t\t\t\t\t\t\t\t\t? \"logged-in-profile-open\"\n\t\t\t\t\t\t\t\t\t\t\t: \"logged-in-profile\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FaRedditSquare />\n\t\t\t\t\t\t\t\t\t<div className=\"username\">{state.auth.user.username}</div>\n\t\t\t\t\t\t\t\t\t<ArrowDropDownIcon className=\"hoverable logged-in-arrow\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"logged-in-dropdown-icon-menu\">\n\t\t\t\t\t\t\t\t\t{dropDownState.showMenu ? <DropdownIconMenu /> : null}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"navbar\">\n\t\t\t\t\t<div className=\"logo hoverable\">\n\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t<FaReddit size={35} className=\"navbar-fa-icon\"/>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<span>reddit</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"searchBar\">\n\t\t\t\t\t\t<label htmlFor=\"searchBar\">\n\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input id=\"searchBar\" placeholder=\"Search Reddit\"></input>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"actions\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={handleLogin}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tbuttonStyle=\"btn--secondary\"\n\t\t\t\t\t\t\tbuttonSize=\"btn--small\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLog In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={handleRegister}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tbuttonStyle=\"btn--primary\"\n\t\t\t\t\t\t\tbuttonSize=\"btn--small\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<LoginModal\n\t\t\t\t\topen={signInState.open}\n\t\t\t\t\taction={signInState.signInType}\n\t\t\t\t\tonClose={() => setsignInState({ open: false })}\n\t\t\t\t\tsignInState={signInState} \n\t\t\t\t\tsetsignInState={setsignInState}\n\t\t\t\t></LoginModal>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tstate,\n\t\tisAuthenticated: state.auth.isAuthenticated,\n\t};\n}\n\nexport default connect(mapStateToProps)(Navbar);\n"]},"metadata":{},"sourceType":"module"}