{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnewton/Desktop/network_frontend/src/components/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  componenet: Compoenet,\n  auth,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => {\n    if (auth.isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 28\n      }, this);\n    } else if (!auth.isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 28\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 28\n      }, this);\n    }\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 9\n}, this);\n\n_c = PrivateRoute;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/network_frontend/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","Component","PrivateRoute","componenet","Compoenet","auth","rest","props","isLoading","isAuthenticated","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAIA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,UAAU,EAAEC,SAAd;AAAyBC,EAAAA,IAAzB;AAClB,KAAGC;AADe,CAAD,kBAEb,QAAC,KAAD,OACQA,IADR;AAEI,EAAA,MAAM,EAAEC,KAAK,IAAI;AACb,QAAGF,IAAI,CAACG,SAAR,EAAmB;AACf,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,IAAG,CAACH,IAAI,CAACI,eAAT,EAA0B;AAC7B,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAEA;AACH,0BAAO,QAAC,SAAD,OAAeF;AAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;AAVL;AAAA;AAAA;AAAA;AAAA,QAFR;;KAAML,Y;;AAgBN,MAAMQ,eAAe,GAAGC,KAAK,KAAK;AAC9BN,EAAAA,IAAI,EAAEM,KAAK,CAACN;AADkB,CAAL,CAA7B;;AAKA,eAAeN,OAAO,CAACW,eAAD,CAAP,CAAyBR,YAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { Route, Redirect} from 'react-router-dom'\nimport { connect } from \"react-redux\"\nimport PropTypes from \"prop-types\"\nimport { Component } from 'react';\n\n\n\nconst PrivateRoute = ({ componenet: Compoenet, auth, \n    ...rest}) => (\n        <Route\n            {...rest}\n            render={props => {\n                if(auth.isLoading) {\n                    return <h2>Loading...</h2>\n                } else if(!auth.isAuthenticated) {\n                    return <Redirect to=\"/\"/>\n                } else {\n                    return <Component {...props} />;\n                }\n            }}\n            />\n    );\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\n\nexport default connect(mapStateToProps)(PrivateRoute)\n"]},"metadata":{},"sourceType":"module"}