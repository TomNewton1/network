{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/main-bar/posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Pagination from \"../../../../pagination/Pagination\";\nimport { getPosts } from \"../../../../../actions/posts\";\nimport \"./posts.css\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Posts({\n  state,\n  getPosts\n}) {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/api/post-list/', tokenConfig(getState)).then(res => {\n      dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      });\n      setPosts(getPosts());\n      allPosts = res.data;\n    }).catch(err => console.log(err));\n    console.log(\"All posts\", allPosts);\n  }, []);\n  console.log(\"Posts are:\", posts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"This is the posts\", posts]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"+kiDMwOOREuyCeBQwojUIwbPVmA=\");\n\n_c = Posts;\n\nfunction mapStateToProps(state) {\n  return {\n    state,\n    isAuthenticated: state.auth.isAuthenticated\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/main-bar/posts/Posts.js"],"names":["React","useState","useEffect","Fragment","connect","Pagination","getPosts","ArrowUpwardIcon","ArrowDownwardIcon","Posts","state","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","axios","get","tokenConfig","getState","then","res","dispatch","type","GET_POSTS","payload","data","allPosts","catch","err","console","log","mapStateToProps","isAuthenticated","auth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AAEA,SAASC,QAAT,QAAyB,8BAAzB;AAEA,OAAO,aAAP;AAEA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;;AAEA,OAAO,SAASC,KAAT,CAAe;AAACC,EAAAA,KAAD;AAAQJ,EAAAA;AAAR,CAAf,EAAkC;AAAA;;AACxC,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACgB,YAAD,IAAiBhB,QAAQ,CAAC,EAAD,CAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACTgB,IAAAA,KAAK,CACJC,GADD,CACK,sCADL,EAC6CC,WAAW,CAACC,QAAD,CADxD,EAECC,IAFD,CAEMC,GAAG,IAAI;AACTC,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEC,SADD;AAELC,QAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFR,OAAD,CAAR;AAKAhB,MAAAA,QAAQ,CAACN,QAAQ,EAAT,CAAR;AACAuB,MAAAA,QAAQ,GAAGN,GAAG,CAACK,IAAf;AAEH,KAXD,EAWGE,KAXH,CAWSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXhB;AAaAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,QAAzB;AAEN,GAhBQ,EAgBN,EAhBM,CAAT;AAkBGG,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BtB,KAA1B;AAEA,sBACI;AAAA,oCAEKA,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAlCeF,K;;KAAAA,K;;AAqChB,SAASyB,eAAT,CAAyBxB,KAAzB,EAAgC;AAC/B,SAAO;AACNA,IAAAA,KADM;AAENyB,IAAAA,eAAe,EAAEzB,KAAK,CAAC0B,IAAN,CAAWD;AAFtB,GAAP;AAIA;;AAED,eAAe/B,OAAO,CAAC8B,eAAD,EAAkB;AAAC5B,EAAAA;AAAD,CAAlB,CAAP,CAAqCG,KAArC,CAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Pagination from \"../../../../pagination/Pagination\";\n\nimport { getPosts } from \"../../../../../actions/posts\";\n\nimport \"./posts.css\";\n\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nexport function Posts({state, getPosts}) {\n\tconst [posts, setPosts] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [postsPerPage] = useState(10);\n\n\tuseEffect(() => {\n        axios\n        .get('http://127.0.0.1:8000/api/post-list/', tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_POSTS,\n                payload: res.data\n            });\n            \n            setPosts(getPosts())\n            allPosts = res.data\n\n        }).catch(err => console.log(err));\n    \n        console.log(\"All posts\", allPosts)\n\t\t\n\t}, []);\n\n    console.log(\"Posts are:\", posts)\n\n    return (\n        <div>\n            This is the posts\n            {posts}\n        </div>\n    )\n\n\n}\n\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tstate,\n\t\tisAuthenticated: state.auth.isAuthenticated,\n\t};\n}\n\nexport default connect(mapStateToProps, {getPosts})(Posts);"]},"metadata":{},"sourceType":"module"}