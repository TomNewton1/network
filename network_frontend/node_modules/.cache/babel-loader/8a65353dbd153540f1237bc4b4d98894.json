{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnewton/Desktop/network_frontend/src/components/pagination/Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Pagination.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pagination({\n  postsPerPage,\n  totalPosts,\n  paginate\n}) {\n  _s();\n\n  const pageNumbers = [];\n  const [currentPage, setCurrentPage] = useState(1);\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination-container\",\n    children: currentPage === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentPage, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          paginate(currentPage + 1);\n          setCurrentPage(currentPage + 1);\n        },\n        href: \"#\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this) : currentPage == pageNumbers.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          paginate(currentPage - 1);\n          setCurrentPage(currentPage - 1);\n        },\n        href: \"#\",\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), currentPage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          paginate(currentPage - 1);\n          setCurrentPage(currentPage - 1);\n        },\n        href: \"#\",\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), currentPage, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          paginate(currentPage + 1);\n          setCurrentPage(currentPage + 1);\n        },\n        href: \"#\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Pagination, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/network_frontend/src/components/pagination/Pagination.js"],"names":["React","useState","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","currentPage","setCurrentPage","i","Math","ceil","push","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,kBAAP;;AAEA,eAAe,SAASC,UAAT,CAAoB;AAACC,EAAAA,YAAD;AAAeC,EAAAA,UAAf;AAA2BC,EAAAA;AAA3B,CAApB,EAA0D;AAAA;;AACrE,QAAMC,WAAW,GAAG,EAApB;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;;AAEA,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUP,UAAU,GAACD,YAArB,CAArB,EAAyDM,CAAC,EAA1D,EAA8D;AAC1DH,IAAAA,WAAW,CAACM,IAAZ,CAAiBH,CAAjB;AACH;;AAGD,sBAEI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,cACKF,WAAW,KAAK,CAAhB,gBACG;AAAA,iBACKA,WADL,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACF,UAAAA,QAAQ,CAACE,WAAW,GAAG,CAAf,CAAR;AAA2BC,UAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AAAgC,SAAnF;AAAqF,QAAA,IAAI,EAAC,GAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAODA,WAAW,IAAID,WAAW,CAACO,MAA3B,gBACA;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACR,UAAAA,QAAQ,CAACE,WAAW,GAAG,CAAf,CAAR;AAA2BC,UAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AAAgC,SAAnF;AAAqF,QAAA,IAAI,EAAC,GAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAESA,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAOA;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACF,UAAAA,QAAQ,CAACE,WAAW,GAAG,CAAf,CAAR;AAA2BC,UAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AAAgC,SAAnF;AAAqF,QAAA,IAAI,EAAC,GAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAESA,WAFT,eAGI;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACF,UAAAA,QAAQ,CAACE,WAAW,GAAG,CAAf,CAAR;AAA2BC,UAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AAAgC,SAAnF;AAAqF,QAAA,IAAI,EAAC,GAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AA6BH;;GAvCuBL,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./Pagination.css\"\n\nexport default function Pagination({postsPerPage, totalPosts, paginate}) {\n    const pageNumbers = [];\n\n    const [currentPage, setCurrentPage] = useState(1);\n\n    for (let i = 1; i <= Math.ceil(totalPosts/postsPerPage); i++) {\n        pageNumbers.push(i);\n    }\n\n\n    return (\n\n        <div className=\"pagination-container\">\n            {currentPage === 1 ? \n                <div>\n                    {currentPage}\n                    <button onClick={() => {paginate(currentPage + 1); setCurrentPage(currentPage + 1)}} href='#'>Next</button>\n                </div>\n            :\n\n            currentPage == pageNumbers.length ?\n            <div>\n                <button onClick={() => {paginate(currentPage - 1); setCurrentPage(currentPage - 1)}} href='#'>Previous</button>\n                    {currentPage}\n            </div>\n            :\n\n            <div>\n                <button onClick={() => {paginate(currentPage - 1); setCurrentPage(currentPage - 1)}} href='#'>Previous</button>\n                    {currentPage}\n                <button onClick={() => {paginate(currentPage + 1); setCurrentPage(currentPage + 1)}} href='#'>Next</button>\n            </div>\n            \n            }\n\n            \n        </div>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}