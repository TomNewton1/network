{"ast":null,"code":"import { GET_LEADS } from \"../actions/types\";\nconst initialState = {\n  leads: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_LEADS:\n      return { ...state,\n        leads: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/network_frontend/src/reducers/leads.js"],"names":["GET_LEADS","initialState","leads","state","action","type","payload"],"mappings":"AAAA,SAASA,SAAT,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,eAAe,UAAUC,KAAK,GAAGF,YAAlB,EAAgCG,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,SAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFT,OAAP;;AAIA;AACI,aAAOH,KAAP;AAPR;AASD","sourcesContent":["import { GET_LEADS } from \"../actions/types\";\n\nconst initialState = {\n    leads: [],\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n      case GET_LEADS:\n        return {\n          ...state,\n          leads: action.payload,\n        };\n        default:\n            return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}