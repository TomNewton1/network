{"ast":null,"code":"var _jsxFileName = \"/Users/thomasnewton/Desktop/network_frontend/src/components/content/main-bar/post/Post.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getLeads } from \"../../../../actions/leads\";\nimport \"./post.css\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Post extends Component {\n  componentDidMount() {\n    this.props.getLeads();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: this.props.leads.map(lead => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-sidebar\",\n            children: [/*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {\n              className: \"upvote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this), \"Vote\", /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {\n              className: \"downvote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-mainbar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-author\",\n              children: [\"Posted by user: \", lead.user]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-title\",\n              children: lead.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-body\",\n              children: post.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-footer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comments\",\n                children: \" Comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nPost.propTypes = {\n  leads: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  leads: state.leads.leads\n});\n\nexport default connect(mapStateToProps, {\n  getLeads\n})(Post);\n/*\n\nconst Post = () => {\n    const [postsState, setPostsState] = useState([])\n\n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/api/post-list/ ')\n            .then((res)=>res.json())\n            .then((postsArray) => {\n                console.log(postsArray)\n                // Map posts array. \n                const newPostsState = postsArray.map((post)=> {\n                    return (\n                        <div className=\"post-wrapper\"> \n                            <div className=\"post\">\n                                <div className=\"post-sidebar\">\n                                    <ArrowUpwardIcon className=\"upvote\" />\n                                    Vote\n                                    <ArrowDownwardIcon className=\"downvote\" />\n                                </div>\n                                <div className=\"post-mainbar\">\n                                    <div className=\"post-author\">\n                                            Posted by user: {post.user}\n                                    </div>\n                                    <div className=\"post-title\">\n                                        {post.title}\n                                    </div>\n                                    <div className=\"post-body\">\n                                        {post.body}\n                                    </div>\n                                    <div className=\"post-footer\">\n                                        <div className=\"comments\"> Comments</div>\n                                    </div>\n                                </div>\n                                \n                            </div>\n                         </div>\n\n                    )\n                    \n                    \n                })\n                setPostsState(newPostsState)\n            })\n    }, [])\n\n    const hasPosts = postsState.length > 0\n\n    return <div>\n        {postsState}\n        </div>\n}\n\n\n\nexport default Post;\n\n*/","map":{"version":3,"sources":["/Users/thomasnewton/Desktop/network_frontend/src/components/content/main-bar/post/Post.js"],"names":["React","Component","Fragment","connect","PropTypes","getLeads","ArrowUpwardIcon","ArrowDownwardIcon","Post","componentDidMount","props","render","leads","map","lead","user","title","post","body","propTypes","array","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAEA,OAAO,YAAP;AAEA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;;AAIA,OAAO,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAKhCQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,QAAX;AACH;;AAEDM,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AAAA,gBACK,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,iBACtB;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACI,QAAC,eAAD;AAAiB,cAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,oBADJ,uBAGI,QAAC,iBAAD;AAAmB,cAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,6CACyBA,IAAI,CAACC,IAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,wBACKD,IAAI,CAACE;AADV;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,wBACKC,IAAI,CAACC;AADV;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAUI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AA8BH;;AAxC+B;AAAvBV,I,CACFW,S,GAAY;AACfP,EAAAA,KAAK,EAAER,SAAS,CAACgB,KAAV,CAAgBC;AADR,C;;AA0CvB,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCX,EAAAA,KAAK,EAAEW,KAAK,CAACX,KAAN,CAAYA;AADa,CAAZ,CAAxB;;AAIA,eAAeT,OAAO,CAACmB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAAsCG,IAAtC,CAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component, Fragment} from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getLeads } from \"../../../../actions/leads\";\n\nimport \"./post.css\";\n\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\n\n\nexport class Post extends Component {\n    static propTypes = {\n        leads: PropTypes.array.isRequired,\n    };\n\n    componentDidMount() {\n        this.props.getLeads();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.props.leads.map(lead => (\n                    <div className=\"post-wrapper\"> \n                        <div className=\"post\">\n                            <div className=\"post-sidebar\">\n                                <ArrowUpwardIcon className=\"upvote\" />\n                                Vote\n                                <ArrowDownwardIcon className=\"downvote\" />\n                            </div>\n                            <div className=\"post-mainbar\">\n                                <div className=\"post-author\">\n                                        Posted by user: {lead.user}\n                                </div>\n                                <div className=\"post-title\">\n                                    {lead.title}\n                                </div>\n                                <div className=\"post-body\">\n                                    {post.body}\n                                </div>\n                                <div className=\"post-footer\">\n                                    <div className=\"comments\"> Comments</div>\n                                </div>\n                            </div>\n                            \n                        </div>\n                    </div>\n                ))}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    leads: state.leads.leads,\n  });\n  \nexport default connect(mapStateToProps, { getLeads})(Post);\n\n/*\n\nconst Post = () => {\n    const [postsState, setPostsState] = useState([])\n\n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/api/post-list/ ')\n            .then((res)=>res.json())\n            .then((postsArray) => {\n                console.log(postsArray)\n                // Map posts array. \n                const newPostsState = postsArray.map((post)=> {\n                    return (\n                        <div className=\"post-wrapper\"> \n                            <div className=\"post\">\n                                <div className=\"post-sidebar\">\n                                    <ArrowUpwardIcon className=\"upvote\" />\n                                    Vote\n                                    <ArrowDownwardIcon className=\"downvote\" />\n                                </div>\n                                <div className=\"post-mainbar\">\n                                    <div className=\"post-author\">\n                                            Posted by user: {post.user}\n                                    </div>\n                                    <div className=\"post-title\">\n                                        {post.title}\n                                    </div>\n                                    <div className=\"post-body\">\n                                        {post.body}\n                                    </div>\n                                    <div className=\"post-footer\">\n                                        <div className=\"comments\"> Comments</div>\n                                    </div>\n                                </div>\n                                \n                            </div>\n                         </div>\n\n                    )\n                    \n                    \n                })\n                setPostsState(newPostsState)\n            })\n    }, [])\n\n    const hasPosts = postsState.length > 0\n\n    return <div>\n        {postsState}\n        </div>\n}\n\n\n\nexport default Post;\n\n*/"]},"metadata":{},"sourceType":"module"}