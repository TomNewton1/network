[{"/Users/thomasnewton/Desktop/network_frontend/src/index.js":"1","/Users/thomasnewton/Desktop/network_frontend/src/reportWebVitals.js":"2","/Users/thomasnewton/Desktop/network_frontend/src/components/App.js":"3","/Users/thomasnewton/Desktop/network_frontend/src/components/landing/Landing.js":"4","/Users/thomasnewton/Desktop/network_frontend/src/components/navbar/Navbar.js":"5","/Users/thomasnewton/Desktop/network_frontend/src/components/button/Button.js":"6","/Users/thomasnewton/Desktop/network_frontend/src/components/accounts/Register.js":"7","/Users/thomasnewton/Desktop/network_frontend/src/components/accounts/Login.js":"8","/Users/thomasnewton/Desktop/network_frontend/src/components/LoginModal/LoginModal.js":"9","/Users/thomasnewton/Desktop/network_frontend/src/store.js":"10","/Users/thomasnewton/Desktop/network_frontend/src/reducers/index.js":"11","/Users/thomasnewton/Desktop/network_frontend/src/actions/types.js":"12","/Users/thomasnewton/Desktop/network_frontend/src/actions/posts.js":"13","/Users/thomasnewton/Desktop/network_frontend/src/reducers/posts.js":"14","/Users/thomasnewton/Desktop/network_frontend/src/reducers/auth.js":"15","/Users/thomasnewton/Desktop/network_frontend/src/components/loginModal/LoginModal.js":"16","/Users/thomasnewton/Desktop/network_frontend/src/components/landing/content/Content.js":"17","/Users/thomasnewton/Desktop/network_frontend/src/components/landing/content/side-bar/SideBar.js":"18","/Users/thomasnewton/Desktop/network_frontend/src/components/landing/content/main-bar/MainBar.js":"19","/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/Homepage.js":"20","/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/Content.js":"21","/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/side-bar/SideBar.js":"22","/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/main-bar/MainBar.js":"23","/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/main-bar/create-post/CreatePost.js":"24","/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/main-bar/posts/Posts.js":"25","/Users/thomasnewton/Desktop/network_frontend/src/components/PrivateRoute.js":"26","/Users/thomasnewton/Desktop/network_frontend/src/actions/auth.js":"27","/Users/thomasnewton/Desktop/network_frontend/src/components/navbar/dropdownIconMenu/DropdownIconMenu.js":"28","/Users/thomasnewton/Desktop/network_frontend/src/components/create/Create.js":"29","/Users/thomasnewton/Desktop/network_frontend/src/components/pagination/Pagination.js":"30","/Users/thomasnewton/Desktop/network_frontend/src/components/landing/content/main-bar/posts/Posts.js":"31","/Users/thomasnewton/Desktop/network_frontend/src/reducers/followingPosts.js":"32","/Users/thomasnewton/Desktop/network_frontend/src/components/profile/Profile.js":"33","/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/Content.js":"34","/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/side-bar/SideBar.js":"35","/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/main-bar/MainBar.js":"36","/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/trending-today/TrendingToday.js":"37","/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/main-bar/posts/Posts.js":"38","/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/side-bar/user-profile/UserProfile.js":"39","/Users/thomasnewton/Desktop/network_frontend/src/components/landing/content/main-bar/create-post/CreatePost.js":"40","/Users/thomasnewton/Desktop/network_frontend/src/components/landing/content/main-bar/title/TitleMainBar.js":"41","/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/main-bar/title/TitleMainBar.js":"42","/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/main-bar/title/TitleMainBar.js":"43","/Users/thomasnewton/Desktop/network_frontend/src/reducers/filterPosts.js":"44","/Users/thomasnewton/Desktop/network_frontend/src/actions/filterPosts.js":"45","/Users/thomasnewton/Desktop/project4/network_frontend/src/index.js":"46","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/App.js":"47","/Users/thomasnewton/Desktop/project4/network_frontend/src/store.js":"48","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/PrivateRoute.js":"49","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/landing/Landing.js":"50","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/homepage/Homepage.js":"51","/Users/thomasnewton/Desktop/project4/network_frontend/src/actions/auth.js":"52","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/create/Create.js":"53","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/navbar/Navbar.js":"54","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/profile/Profile.js":"55","/Users/thomasnewton/Desktop/project4/network_frontend/src/reducers/index.js":"56","/Users/thomasnewton/Desktop/project4/network_frontend/src/actions/posts.js":"57","/Users/thomasnewton/Desktop/project4/network_frontend/src/actions/types.js":"58","/Users/thomasnewton/Desktop/project4/network_frontend/src/actions/filterPosts.js":"59","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/landing/content/Content.js":"60","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/homepage/content/Content.js":"61","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/loginModal/LoginModal.js":"62","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/button/Button.js":"63","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/navbar/dropdownIconMenu/DropdownIconMenu.js":"64","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/profile/content/Content.js":"65","/Users/thomasnewton/Desktop/project4/network_frontend/src/reducers/followingPosts.js":"66","/Users/thomasnewton/Desktop/project4/network_frontend/src/reducers/filterPosts.js":"67","/Users/thomasnewton/Desktop/project4/network_frontend/src/reducers/auth.js":"68","/Users/thomasnewton/Desktop/project4/network_frontend/src/reducers/posts.js":"69","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/landing/content/main-bar/MainBar.js":"70","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/landing/content/side-bar/SideBar.js":"71","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/homepage/content/main-bar/MainBar.js":"72","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/homepage/content/side-bar/SideBar.js":"73","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/accounts/Login.js":"74","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/profile/content/main-bar/MainBar.js":"75","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/accounts/Register.js":"76","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/profile/content/side-bar/SideBar.js":"77","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/landing/content/main-bar/title/TitleMainBar.js":"78","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/landing/content/main-bar/create-post/CreatePost.js":"79","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/landing/content/main-bar/posts/Posts.js":"80","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/homepage/content/main-bar/title/TitleMainBar.js":"81","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/homepage/content/main-bar/create-post/CreatePost.js":"82","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/homepage/content/main-bar/posts/Posts.js":"83","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/profile/content/main-bar/title/TitleMainBar.js":"84","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/profile/content/main-bar/posts/Posts.js":"85","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/profile/content/side-bar/user-profile/UserProfile.js":"86","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/pagination/Pagination.js":"87"},{"size":353,"mtime":1629100890395,"results":"88","hashOfConfig":"89"},{"size":362,"mtime":1626851534861,"results":"90","hashOfConfig":"91"},{"size":1170,"mtime":1631026735362,"results":"92","hashOfConfig":"89"},{"size":195,"mtime":1628235123990,"results":"93","hashOfConfig":"89"},{"size":4371,"mtime":1631110070665,"results":"94","hashOfConfig":"89"},{"size":613,"mtime":1627036594149,"results":"95","hashOfConfig":"89"},{"size":3479,"mtime":1631026786780,"results":"96","hashOfConfig":"89"},{"size":2293,"mtime":1631026763129,"results":"97","hashOfConfig":"89"},{"size":832,"mtime":1628173921791,"results":"98","hashOfConfig":"91"},{"size":386,"mtime":1628175309721,"results":"99","hashOfConfig":"89"},{"size":280,"mtime":1631084965171,"results":"100","hashOfConfig":"89"},{"size":712,"mtime":1631085345340,"results":"101","hashOfConfig":"89"},{"size":2773,"mtime":1631025222151,"results":"102","hashOfConfig":"89"},{"size":803,"mtime":1630916808702,"results":"103","hashOfConfig":"89"},{"size":1396,"mtime":1629302401948,"results":"104","hashOfConfig":"89"},{"size":2362,"mtime":1631027190530,"results":"105","hashOfConfig":"89"},{"size":349,"mtime":1630750466285,"results":"106","hashOfConfig":"89"},{"size":3218,"mtime":1630836341247,"results":"107","hashOfConfig":"89"},{"size":585,"mtime":1630751371691,"results":"108","hashOfConfig":"89"},{"size":198,"mtime":1628235115235,"results":"109","hashOfConfig":"89"},{"size":350,"mtime":1629298660969,"results":"110","hashOfConfig":"89"},{"size":3219,"mtime":1630836394723,"results":"111","hashOfConfig":"89"},{"size":339,"mtime":1630749281982,"results":"112","hashOfConfig":"89"},{"size":830,"mtime":1629028792544,"results":"113","hashOfConfig":"89"},{"size":4615,"mtime":1631087066538,"results":"114","hashOfConfig":"89"},{"size":701,"mtime":1629298606039,"results":"115","hashOfConfig":"89"},{"size":3941,"mtime":1631026717273,"results":"116","hashOfConfig":"89"},{"size":1920,"mtime":1630444651275,"results":"117","hashOfConfig":"89"},{"size":1803,"mtime":1630936335794,"results":"118","hashOfConfig":"89"},{"size":1662,"mtime":1631027172786,"results":"119","hashOfConfig":"89"},{"size":10675,"mtime":1631109853025,"results":"120","hashOfConfig":"89"},{"size":319,"mtime":1630060307575,"results":"121","hashOfConfig":"89"},{"size":195,"mtime":1630663547243,"results":"122","hashOfConfig":"89"},{"size":349,"mtime":1630750477768,"results":"123","hashOfConfig":"89"},{"size":318,"mtime":1631089373852,"results":"124","hashOfConfig":"89"},{"size":277,"mtime":1631088951098,"results":"125","hashOfConfig":"89"},{"size":186,"mtime":1630425423352,"results":"126","hashOfConfig":"89"},{"size":10947,"mtime":1631087132075,"results":"127","hashOfConfig":"89"},{"size":4675,"mtime":1631088524288,"results":"128","hashOfConfig":"89"},{"size":830,"mtime":1630748757219,"results":"129","hashOfConfig":"89"},{"size":176,"mtime":1630749175187,"results":"130","hashOfConfig":"89"},{"size":175,"mtime":1630749300935,"results":"131","hashOfConfig":"89"},{"size":179,"mtime":1630749416365,"results":"132","hashOfConfig":"89"},{"size":297,"mtime":1631086011712,"results":"133","hashOfConfig":"89"},{"size":308,"mtime":1631085955775,"results":"134","hashOfConfig":"89"},{"size":353,"mtime":1629100890395,"results":"135","hashOfConfig":"136"},{"size":1170,"mtime":1631026735362,"results":"137","hashOfConfig":"136"},{"size":386,"mtime":1628175309721,"results":"138","hashOfConfig":"136"},{"size":701,"mtime":1629298606039,"results":"139","hashOfConfig":"136"},{"size":195,"mtime":1628235123990,"results":"140","hashOfConfig":"136"},{"size":198,"mtime":1628235115235,"results":"141","hashOfConfig":"136"},{"size":3941,"mtime":1631026717273,"results":"142","hashOfConfig":"136"},{"size":1803,"mtime":1630936335794,"results":"143","hashOfConfig":"136"},{"size":4371,"mtime":1631110070665,"results":"144","hashOfConfig":"136"},{"size":195,"mtime":1630663547243,"results":"145","hashOfConfig":"136"},{"size":280,"mtime":1631084965171,"results":"146","hashOfConfig":"136"},{"size":2773,"mtime":1631025222151,"results":"147","hashOfConfig":"136"},{"size":712,"mtime":1631085345340,"results":"148","hashOfConfig":"136"},{"size":308,"mtime":1631085955775,"results":"149","hashOfConfig":"136"},{"size":349,"mtime":1630750466285,"results":"150","hashOfConfig":"136"},{"size":350,"mtime":1629298660969,"results":"151","hashOfConfig":"136"},{"size":2728,"mtime":1631116204382,"results":"152","hashOfConfig":"136"},{"size":613,"mtime":1627036594149,"results":"153","hashOfConfig":"136"},{"size":1920,"mtime":1630444651275,"results":"154","hashOfConfig":"136"},{"size":349,"mtime":1630750477768,"results":"155","hashOfConfig":"136"},{"size":319,"mtime":1630060307575,"results":"156","hashOfConfig":"136"},{"size":297,"mtime":1631086011712,"results":"157","hashOfConfig":"136"},{"size":1396,"mtime":1629302401948,"results":"158","hashOfConfig":"136"},{"size":803,"mtime":1630916808702,"results":"159","hashOfConfig":"136"},{"size":585,"mtime":1630751371691,"results":"160","hashOfConfig":"136"},{"size":3218,"mtime":1630836341247,"results":"161","hashOfConfig":"136"},{"size":339,"mtime":1630749281982,"results":"162","hashOfConfig":"136"},{"size":3219,"mtime":1630836394723,"results":"163","hashOfConfig":"136"},{"size":2293,"mtime":1631026763129,"results":"164","hashOfConfig":"136"},{"size":277,"mtime":1631088951098,"results":"165","hashOfConfig":"136"},{"size":3479,"mtime":1631026786780,"results":"166","hashOfConfig":"136"},{"size":318,"mtime":1631089373852,"results":"167","hashOfConfig":"136"},{"size":176,"mtime":1630749175187,"results":"168","hashOfConfig":"136"},{"size":830,"mtime":1630748757219,"results":"169","hashOfConfig":"136"},{"size":10675,"mtime":1631109853025,"results":"170","hashOfConfig":"136"},{"size":175,"mtime":1630749300935,"results":"171","hashOfConfig":"136"},{"size":830,"mtime":1629028792544,"results":"172","hashOfConfig":"136"},{"size":4615,"mtime":1631087066538,"results":"173","hashOfConfig":"136"},{"size":179,"mtime":1630749416365,"results":"174","hashOfConfig":"136"},{"size":10947,"mtime":1631087132075,"results":"175","hashOfConfig":"136"},{"size":4675,"mtime":1631088524288,"results":"176","hashOfConfig":"136"},{"size":1662,"mtime":1631027172786,"results":"177","hashOfConfig":"136"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"1mhen21",{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s5drju",{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"180"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"180"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"180"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"180"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"180"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"180"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"180"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"180"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yaxd0f",{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/thomasnewton/Desktop/network_frontend/src/index.js",[],["364","365"],"/Users/thomasnewton/Desktop/network_frontend/src/reportWebVitals.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/App.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/landing/Landing.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/navbar/Navbar.js",["366","367"],"/Users/thomasnewton/Desktop/network_frontend/src/components/button/Button.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/accounts/Register.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/accounts/Login.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/LoginModal/LoginModal.js",[],["368","369"],"/Users/thomasnewton/Desktop/network_frontend/src/store.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/reducers/index.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/actions/types.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/actions/posts.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/reducers/posts.js",["370"],"import { GET_POSTS, GET_USER_POSTS, CREATE_POST, LIKE_POST, EDIT_POST } from \"../actions/types\";\n\nconst initialState = {\n\tposts: [],\n\tlikedPost: [],\n\tuserPosts: {\n\t\tusername: \"\", \n\t\tfollowers: \"\", \n\t\tfollowing: \"\",\n\t\tdate: \"\", \n\t\tposts: [],\n\t},\n\teditedPost: [],\n};\n\nexport default function (state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_POSTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: action.payload,\n\t\t\t};\n\t\tcase GET_USER_POSTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserPosts: action.payload,\n\t\t\t};\n\t\tcase CREATE_POST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [...state.posts, action.payload],\n\t\t\t};\n\t\tcase LIKE_POST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlikedPost: action.payload,\n\t\t\t};\n\t\tcase EDIT_POST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\teditedPost: action.payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","/Users/thomasnewton/Desktop/network_frontend/src/reducers/auth.js",["371"],"import { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, REGISTER_SUCCESS, REGISTER_FAIL, LOGOUT_SUCCESS } from \"../actions/types\";\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false, \n    user: null\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case USER_LOADING:\n            return {\n                ...state, \n                isLoading: true,\n            }\n        case USER_LOADED:\n            return {\n                ...state, \n                isAuthenticated: true, \n                isLoading: false, \n                user: action.payload,\n            }\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS:\n            localStorage.setItem('token', \n            action.payload.token);\n            return {\n                ...state,\n                ...action.payload, \n                isAuthenticated: true, \n                isLoading: false,\n            }\n\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case REGISTER_FAIL:\n        case LOGOUT_SUCCESS:\n            localStorage.removeItem('token')\n            return {\n                ...state, \n                token: null, \n                user: null, \n                isAuthenticated: false, \n                isLoading: false,\n            }\n        default:\n            return state;\n    }\n}","/Users/thomasnewton/Desktop/network_frontend/src/components/loginModal/LoginModal.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/landing/content/Content.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/landing/content/side-bar/SideBar.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/landing/content/main-bar/MainBar.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/Homepage.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/Content.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/side-bar/SideBar.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/main-bar/MainBar.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/main-bar/create-post/CreatePost.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/main-bar/posts/Posts.js",["372","373","374","375","376"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport Pagination from \"../../../../pagination/Pagination\";\nimport moment from 'moment'\nimport { Link } from \"react-router-dom\";\n\nimport { getFollowerPosts , votePost } from \"../../../../../actions/posts\";\n\n\nimport \"./posts.css\";\n\nimport { GoComment, FcReddit, FiEdit2 } from 'react-icons/all'\n\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nexport default function Posts() {\n\n    // Load posts by followers on page load\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getFollowerPosts(user_id))\n    }, [])\n\n    // Get all posts from users the user follows\n    const posts = useSelector((state) => state.followingPosts.followingPosts); \n\n    // Get user id from redux store\n    const user_id = useSelector((state) => state.auth.user.id);\n\n    // Get logged in username\n     const user = useSelector((state) => state.auth.user)\n\n    // Set up for pagination\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [postsPerPage] = useState(10);\n\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n   // Get current post\n\tconst indexOfLastPost = currentPage * postsPerPage;\n\tconst indexOfFirstPost = indexOfLastPost - postsPerPage;\n\tconst currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n    // Assign vote type (assigns string to variable based on upvote or downvote click)\n    var type = \"\";\n\n    // Set posts in state and then update re-render page when user votes on post. \n    const vote = useSelector((state) => state.posts.likedPost)\n\n    useEffect(() => {\n    dispatch(getFollowerPosts(user_id))\n    }, [vote])\n\n    // Get searchTerm for redux store\n    const searchTerm = useSelector((state) => state.filterPosts.searchTerm)\n\n    return (\n        <Fragment>\n                {currentPosts.filter((post) => {\n                    if (searchTerm == \"\") {\n                        return post\n                    } else if ( post.body.toLowerCase().includes(searchTerm.toLowerCase())){\n                        return post\n                    } else if (post.title.toLowerCase().includes(searchTerm.toLowerCase())){\n                        return post\n                    }\n                }).map(post => (\n                    <div className=\"post-wrapper\"> \n                        <div className=\"post\">\n                            <div className=\"post-sidebar\">\n                            <ArrowUpwardIcon onClick={() => dispatch(votePost(user.id, post.id, type=\"upvote\")) } className=\"upvote\" />\n                                    <div>{post.votes !==0 ? post.votes : \"Vote\"}</div>\n                                    <ArrowDownwardIcon onClick={() => dispatch(votePost(user.id, post.id, type=\"downvote\")) } className=\"downvote\" />\n                            </div>\n                            <div className=\"post-mainbar\">\n                                <div className=\"post-author\">\n                                <FcReddit size={22}/> \n                                Posted by &nbsp; <Link to={`/user/${post.user}`}>u/{post.username} </Link> &nbsp; on {moment(post.date).format('MMMM Do YYYY, h:mm a')}\n                                </div>\n                                <div className=\"post-title\">\n                                    {post.title}\n                                </div>\n                                <div className=\"post-body\">\n                                    {post.body}\n                                </div>\n                                <div className=\"post-footer\">\n                                    <div className=\"comment-container\">\n                                        <GoComment size={18}/> \n                                        <div className=\"comments\"> Comments</div>\n                                    </div>\n                                    {user.id === post.user ? \n                                    <div className=\"edit-container\">\n                                        <FiEdit2 size={18}/> \n                                        <div className=\"edit\"> Edit Post</div>\n                                    </div> : null\n                                    }\n                                </div>\n                            </div>\n                            \n                        </div>\n                    </div>\n                ))}\n                <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate}/>\n            </Fragment>\n    )\n\n}\n\n\n","/Users/thomasnewton/Desktop/network_frontend/src/components/PrivateRoute.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/actions/auth.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/navbar/dropdownIconMenu/DropdownIconMenu.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/create/Create.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/pagination/Pagination.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/landing/content/main-bar/posts/Posts.js",["377","378","379","380","381","382"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport { useSelector, useDispatch, connect } from 'react-redux'\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport moment from 'moment'\n\nimport Pagination from \"../../../../pagination/Pagination\";\nimport LoginModal from \"../../../../loginModal/LoginModal\";\n\n\nimport { getPosts, votePost, editPost } from '../../../../../actions/posts';\n\nimport \"./posts.css\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { GoComment, FcReddit, FiEdit2 } from 'react-icons/all'\n\nexport function Posts() {\n\n    // Get Posts via getPosts function and redux dispathcer\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getPosts())\n    }, [])\n\n    // Set posts in state\n    const posts = useSelector((state) => state.posts.posts)\n\n    // Handle with Pagination\n    const [currentPage, setCurrentPage] = useState(1);\n\tconst [postsPerPage] = useState(10);\n\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n   // Get current post (for paggination)\n\tconst indexOfLastPost = currentPage * postsPerPage;\n\tconst indexOfFirstPost = indexOfLastPost - postsPerPage;\n\tconst currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n    // Handle State for Modal (checks if user clicked on login or logout)\n\tconst [signInState, setsignInState] = useState({\n\t\topen: false,\n\t\tsignInType: \"\",\n\t});\n\n\t// setSignInState to closed if the user is authenticated\n\tuseEffect(() => {\n\t\tsetsignInState({ open: false });\n\t}, []);\n\n\tconst handleRegister = () => {\n\t\tsetsignInState({\n\t\t\topen: true,\n\t\t\tsignInType: \"register\",\n\t\t});\n\t};\n\n    // Assign vote type (assigns string to variable based on upvote or downvote click)\n    var type = \"\"\n\n    // Check if user is Authenticated\n    const Authenticated = useSelector((state) => state.auth.isAuthenticated)\n\n    // Get logged in user id\n    const user = useSelector((state) => state.auth.user)\n\n    // Set posts in state and then update re-render page when user votes on post. \n    const vote = useSelector((state) => state.posts.likedPost)\n\n    useEffect(() => {\n        dispatch(getPosts())\n    }, [vote])\n\n    // Set post ID\n    const [postId, setPostId] = useState(null)\n\n    //Handle Edit \n    const [editText, setEditText] = useState(false)\n\n    const handleEdit = () => {\n        setEditText(true)\n    }\n\n    // React hook forms and handleSubmit \n\n    const { register, handleSubmit} = useForm();\n\n    const onSubmit = (data, post_id) => {\n        dispatch(editPost(post_id, data.title, data.body))\n        setEditText(false)\n    }\n\n    // Set edit in state and then update re-render page when user edits a post.\n    const edited = useSelector((state) => state.posts.editedPost)\n\n    useEffect(() => {\n        dispatch(getPosts())\n    }, [edited])\n\n    // Get searchTerm for redux store\n    const searchTerm = useSelector((state) => state.filterPosts.searchTerm)\n\n\n    if (Authenticated) {\n        return (\n            <Fragment>\n                {currentPosts.filter((post) => {\n                    if (searchTerm == \"\") {\n                        return post\n                    } else if ( post.body.toLowerCase().includes(searchTerm.toLowerCase())){\n                        return post\n                    } else if (post.title.toLowerCase().includes(searchTerm.toLowerCase())){\n                        return post\n                    }\n                }).map(post => (\n                    <div className=\"post-wrapper\"> \n                        <div className=\"post\">\n                            <div className=\"post-sidebar\">\n                                <ArrowUpwardIcon onClick={() => dispatch(votePost(user.id, post.id, type=\"upvote\")) } className=\"upvote\" />\n                                <div>{post.votes !==0 ? post.votes : \"Vote\"}</div>\n                                <ArrowDownwardIcon onClick={() => dispatch(votePost(user.id, post.id, type=\"downvote\")) } className=\"downvote\" />\n                            </div>\n                            <div className=\"post-mainbar\">\n                                <div className=\"post-author\">\n                                <FcReddit size={22}/> \n                                Posted by&nbsp; <Link to={`/user/${post.user}`}>u/{post.username} </Link> &nbsp;on {moment(post.date).format('MMMM Do YYYY, h:mm a')}\n                                </div>\n                                {editText ? postId===post.id ?\n                                <form className=\"form-group\" onSubmit={handleSubmit(data => onSubmit(data, post.id))} >\n                                    \n                                    <input\n                                        className=\"title-input\"\n                                        type=\"text\" \n                                        name=\"title\"\n                                        defaultValue={post.title}\n                                        {...register(\"title\")} \n                                        \n                                    />\n                                    <textarea\n                                        className=\"body-input\"\n                                        type=\"text\"\n                                        name=\"body\"\n                                        defaultValue={post.body}\n                                        {...register(\"body\")} \n                                    />\n                                    <input\n                                        className=\"form-button\"\n                                        value=\"POST\"\n                                        type=\"submit\"\n                                    />\n                                </form>\n                                :\n                                <div className=\"editable-post\">\n                                    <div className=\"post-title\">\n                                        {post.title}\n                                    </div>\n                                    <div className=\"post-body\">\n                                        {post.body}\n                                    </div>\n                                </div>\n                                :\n                                <div className=\"editable-post\">\n                                    <div className=\"post-title\">\n                                        {post.title}\n                                    </div>\n                                    <div className=\"post-body\">\n                                        {post.body}\n                                    </div>\n                                </div>\n                                }   \n                                <div className=\"post-footer\">\n                                    <div className=\"comment-container\">\n                                        <GoComment size={18}/> \n                                        <div className=\"comments\"> Comments</div>\n                                    </div>\n                                    {user.id === post.user ? \n                                    <div onClick={() => {handleEdit(); setPostId(post.id);}} className=\"edit-container\">\n                                        <FiEdit2 size={18}/> \n                                        <div className=\"edit\"> Edit Post</div>\n                                    </div> : null\n                                    }\n                                </div>\n                            </div>\n                            \n                        </div>\n                    </div>\n                ))}\n                <LoginModal\n                    open={signInState.open}\n                    action={signInState.signInType}\n                    onClose={() => setsignInState({ open: false })}\n                    signInState={signInState} \n\t\t\t\t\tsetsignInState={setsignInState}\n                ></LoginModal>\n                <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate}/>\n            </Fragment>\n        )\n    } else {\n        return (\n            <Fragment>\n                    {currentPosts.map(post => (\n                        <div className=\"post-wrapper\"> \n                            <div className=\"post\">\n                                <div className=\"post-sidebar\">\n                                    <ArrowUpwardIcon onClick={handleRegister} className=\"upvote\" />\n                                    <div>{post.votes !==0 ? post.votes : \"Vote\"}</div>\n                                    <ArrowDownwardIcon  onClick={handleRegister} className=\"downvote\" />\n                                </div>\n                                <div className=\"post-mainbar\">\n                                    <div className=\"post-author\">\n                                    <FcReddit size={22}/> \n                                    Posted by&nbsp; <Link onClick={handleRegister} >u/{post.username} </Link> &nbsp;on {moment(post.date).format('MMMM Do YYYY, h:mm a')}\n                                    </div>\n                                    <div className=\"post-title\">\n                                        {post.title}\n                                    </div>\n                                    <div className=\"post-body\">\n                                        {post.body}\n                                    </div>\n                                    <div className=\"post-footer\">\n                                        <div className=\"comment-container\" onClick={handleRegister}>\n                                            <GoComment size={18}/> \n                                            <div className=\"comments\"> Comments</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                            </div>\n                        </div>\n                    ))}\n                    <LoginModal\n                        open={signInState.open}\n                        action={signInState.signInType}\n                        onClose={() => setsignInState({ open: false })}\n                        signInState={signInState} \n\t\t\t\t\t    setsignInState={setsignInState}\n                    ></LoginModal>\n                    <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate}/>\n                </Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tstate,\n\t\tisAuthenticated: state.auth.isAuthenticated,\n        likedPost: state.posts.likedPost\n\t};\n}\n\nexport default connect(mapStateToProps)(Posts);\n","/Users/thomasnewton/Desktop/network_frontend/src/reducers/followingPosts.js",["383"],"import { GET_FOLLOWING_POSTS, } from \"../actions/types\";\n\nconst initialState = {\n\tfollowingPosts: [],\n};\n\nexport default function (state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_FOLLOWING_POSTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfollowingPosts: action.payload,\n\t\t\t};\n\t\t\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","/Users/thomasnewton/Desktop/network_frontend/src/components/profile/Profile.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/Content.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/side-bar/SideBar.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/main-bar/MainBar.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/trending-today/TrendingToday.js",[],["384","385"],"/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/main-bar/posts/Posts.js",["386","387","388","389","390","391"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport { useSelector, useDispatch, connect } from 'react-redux'\nimport { Link, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport moment from 'moment'\n\nimport Pagination from \"../../../../pagination/Pagination\";\nimport LoginModal from \"../../../../loginModal/LoginModal\";\n\n\nimport { getUserPosts, votePost, editPost } from '../../../../../actions/posts';\n\nimport \"./posts.css\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { GoComment, FcReddit, FiEdit2 } from 'react-icons/all'\n\nexport function Posts() {\n\n    //Parameters from URL (get user id)\n    const { id } = useParams()\n\n    // Get Posts via getPosts function and redux dispathcer\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getUserPosts(id))\n    }, [])\n\n    // Set posts in state from Redux\n    const posts = useSelector((state) => state.posts.userPosts.posts)\n\n\n    // Handle with Pagination\n    const [currentPage, setCurrentPage] = useState(1);\n\tconst [postsPerPage] = useState(10);\n\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n   // Get current post (for paggination)\n\tconst indexOfLastPost = currentPage * postsPerPage;\n\tconst indexOfFirstPost = indexOfLastPost - postsPerPage;\n\tconst currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n    // Handle Modal\n    // Handle State for Modal (checks if user clicked on login or logout)\n\tconst [signInState, setsignInState] = useState({\n\t\topen: false,\n\t\tsignInType: \"\",\n\t});\n\n\t// setSignInState to closed if the user is authenticated\n\tuseEffect(() => {\n\t\tsetsignInState({ open: false });\n\t}, []);\n\n\tconst handleRegister = () => {\n\t\tsetsignInState({\n\t\t\topen: true,\n\t\t\tsignInType: \"register\",\n\t\t});\n\t};\n\n    // Assign vote type (assigns string to variable based on upvote or downvote click)\n    var type = \"\"\n\n    // Check if user is Authenticated\n    const Authenticated = useSelector((state) => state.auth.isAuthenticated)\n\n    // Get logged in user id\n    const user = useSelector((state) => state.auth.user)\n\n    \n    // Set posts in state and then update re-render page when user votes on post. \n    const vote = useSelector((state) => state.posts.likedPost)\n\n    useEffect(() => {\n        dispatch(getUserPosts(id))\n    }, [vote, id])\n\n    // Set post ID\n    const [postId, setPostId] = useState(null)\n\n    //Handle Edit \n    const [editText, setEditText] = useState(false)\n\n    const handleEdit = () => {\n        setEditText(true)\n    }\n\n    // React hook forms and handleSubmit \n\n    const { register, handleSubmit} = useForm();\n\n    const onSubmit = (data, post_id) => {\n        dispatch(editPost(post_id, data.title, data.body))\n        setEditText(false)\n    }\n\n    // Set edit in state and then update re-render page when user edits a post.\n    const edited = useSelector((state) => state.posts.editedPost)\n\n    useEffect(() => {\n        dispatch(getUserPosts(id))\n    }, [edited])\n\n    // Get searchTerm for redux store\n    const searchTerm = useSelector((state) => state.filterPosts.searchTerm)\n\n    if (Authenticated) {\n        return (\n            <Fragment>\n                {currentPosts.filter((post) => {\n                    if (searchTerm == \"\") {\n                        return post\n                    } else if ( post.body.toLowerCase().includes(searchTerm.toLowerCase())){\n                        return post\n                    } else if (post.title.toLowerCase().includes(searchTerm.toLowerCase())){\n                        return post\n                    }\n                }).map(post => (\n                        <div className=\"post-wrapper\"> \n                            <div className=\"post\">\n                                <div className=\"post-sidebar\">\n                                    <ArrowUpwardIcon onClick={() => dispatch(votePost(user.id, post.id, type=\"upvote\")) } className=\"upvote\" />\n                                    <div>{post.votes !==0 ? post.votes : \"Vote\"}</div>\n                                    <ArrowDownwardIcon onClick={() => dispatch(votePost(user.id, post.id, type=\"downvote\")) } className=\"downvote\" />\n                                </div>\n                                <div className=\"post-mainbar\">\n                                    <div className=\"post-author\">\n                                    <FcReddit size={22}/> \n                                    Posted by&nbsp; <Link to={`/user/${post.user}`}>u/{post.username} </Link> &nbsp;on {moment(post.date).format('MMMM Do YYYY, h:mm a')}\n                                    </div>\n                                    {editText ? postId===post.id ?\n                                    <form className=\"form-group\" onSubmit={handleSubmit(data => onSubmit(data, post.id))} >\n                                        \n                                        <input\n                                            className=\"title-input\"\n                                            type=\"text\" \n                                            name=\"title\"\n                                            defaultValue={post.title}\n                                            {...register(\"title\")} \n                                            \n                                        />\n                                        <textarea\n                                            className=\"body-input\"\n                                            type=\"text\"\n                                            name=\"body\"\n                                            defaultValue={post.body}\n                                            {...register(\"body\")} \n                                        />\n                                        <input\n                                            className=\"form-button\"\n                                            value=\"POST\"\n                                            type=\"submit\"\n                                        />\n                                    </form>\n                                    :\n                                    <div className=\"editable-post\">\n                                        <div className=\"post-title\">\n                                            {post.title}\n                                        </div>\n                                        <div className=\"post-body\">\n                                            {post.body}\n                                        </div>\n                                    </div>\n                                    :\n                                    <div className=\"editable-post\">\n                                        <div className=\"post-title\">\n                                            {post.title}\n                                        </div>\n                                        <div className=\"post-body\">\n                                            {post.body}\n                                        </div>\n                                    </div>\n                                    }   \n                                    <div className=\"post-footer\">\n                                        <div className=\"comment-container\">\n                                            <GoComment size={18}/> \n                                            <div className=\"comments\"> Comments</div>\n                                        </div>\n                                        {user.id === post.user ? \n                                        <div onClick={() => {handleEdit(); setPostId(post.id);}} className=\"edit-container\">\n                                            <FiEdit2 size={18}/> \n                                            <div className=\"edit\"> Edit Post</div>\n                                        </div> : null\n                                        }\n                                    </div>\n                                </div>\n                                \n                            </div>\n                        </div>\n                    ))}\n                    <LoginModal\n                        open={signInState.open}\n                        action={signInState.signInType}\n                        onClose={() => setsignInState({ open: false })}\n                    ></LoginModal>\n                    <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate}/>\n                </Fragment>\n        )\n    } else {\n        return (\n            <Fragment>\n                    {currentPosts.map(post => (\n                        <div className=\"post-wrapper\"> \n                            <div className=\"post\">\n                                <div className=\"post-sidebar\">\n                                    <ArrowUpwardIcon onClick={handleRegister} className=\"upvote\" />\n                                    <div>{post.votes !==0 ? post.votes : \"Vote\"}</div>\n                                    <ArrowDownwardIcon  onClick={handleRegister} className=\"downvote\" />\n                                </div>\n                                <div className=\"post-mainbar\">\n                                    <div className=\"post-author\">\n                                    <FcReddit size={22}/> \n                                    Posted by &nbsp; <Link to={`/user/${post.user}`}>u/{post.username} </Link> &nbsp; on {moment(post.date).format('MMMM Do YYYY, h:mm a')}\n                                    </div>\n                                    <div className=\"post-title\">\n                                        {post.title}\n                                    </div>\n                                    <div className=\"post-body\">\n                                        {post.body}\n                                    </div>\n                                    <div className=\"post-footer\">\n                                        <div className=\"comment-container\">\n                                            <GoComment size={18}/> \n                                            <div className=\"comments\"> Comments</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                            </div>\n                        </div>\n                    ))}\n                    <LoginModal\n                        open={signInState.open}\n                        action={signInState.signInType}\n                        onClose={() => setsignInState({ open: false })}\n                    ></LoginModal>\n                    <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate}/>\n                </Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tstate,\n\t\tisAuthenticated: state.auth.isAuthenticated,\n        likedPost: state.posts.likedPost\n\t};\n}\n\nexport default connect(mapStateToProps)(Posts);\n","/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/side-bar/user-profile/UserProfile.js",["392","393"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport moment from 'moment'\n\nimport { getUserPosts } from '../../../../../actions/posts';\n\nimport './UserProfile.css'\n\nimport Button from '../../../../button/Button'\nimport { RiCake2Line } from 'react-icons/all'\n\nimport Avatar from \"../../../../../assets/avatar_default.png\"\n\nexport default function UserProfile() {\n    \n    // Get user profile join date \n    const date_joined = useSelector((state) => state.posts.userPosts.date)\n    const date_joined_updated = date_joined.substring(1, date_joined.length-1);\n\n    // Get user profile followers\n    const followers = useSelector((state) => state.posts.userPosts.followers)\n\n    // Get user profile following\n    const following = useSelector((state) => state.posts.userPosts.following)\n\n    // Get user profile username\n    const username = useSelector((state) => state.posts.userPosts.username)\n\n    // Get logged in user id \n    const user_id = useSelector((state) => state.auth.user.id);\n\n    // Get profile user id from url\n    const { id } = useParams()\n\n    // On load, check relationship between logged in user and profile user. Default set to empty string. \n    const [follower, setFollower] = useState(\"\");\n\n\n    // Get Posts via getPosts function and redux dispatcher\n    const dispatch = useDispatch();\n    \n    // If the user follows/unfollows then reload the user details in Redux \n    useEffect(() => {\n        dispatch(getUserPosts(id))\n        axios\n            .get(`http://127.0.0.1:8000/api/follow-user/${user_id}/${id}`)\n            .then(res => {\n                if (res.data === \"true\") {\n                    setFollower(true)\n                } else {\n                    setFollower(false)\n                }\n            })\n     \n            .catch(err => console.log(err));\n\n    }, [])\n\n    const followUnfollow = (user_id, id, action) => {\n\n        // Send action to backend. Action is either \"follow\" or \"unfollow\"\n        axios\n            .post(`http://127.0.0.1:8000/api/follow-user/${user_id}/${id}`, {action} )\n            .then(res => {\n                console.log(\"Follow/Unfollow response:\", res.data)\n                if (res.data === \"true\") {\n                    setFollower(true)\n                } else {\n                    setFollower(false)\n                }\n            })\n            .catch(err => console.log(err));\n        \n        // Get updated user profile (this will upfate follower/following count)\n        dispatch(getUserPosts(id))\n        \n    };\n\n\n    return (\n        <div className=\"user-profile\">\n            <div className=\"header\">\n                <div className=\"profile-picture\">\n                <img src={Avatar} alt=\"avatar\"/>\n                    <div className=\"profile-username\">\n                        u/{username}\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"cake-day\">\n                <RiCake2Line/> &nbsp;\n                <div><b>Cake day</b> {moment(date_joined_updated).format('MMMM Do YYYY, h:mm a')}</div>\n            </div>\n            <div className=\"follower-following\">\n                    <div><b>{following}</b> Following, </div>\n                    <div style={{marginLeft: \"10px\"}}> <b>{followers}</b>  Followers</div>\n                </div>\n            <div className=\"follow-unfollow\">\n                {user_id == id ?\n                    <Link to=\"/submit\">\n                        <Button\n                            type=\"button\"\n                            buttonStyle=\"btn--primary\"\n                            buttonSize=\"btn--small\"\n                        >\n                            New Post\n                        </Button> \n                    </Link> :\n\n                    \n                    follower ?  <Button\n                        onClick={() => followUnfollow(user_id, id, \"unfollow\")}\n                        type=\"button\"\n                        buttonStyle=\"btn--primary\"\n                        buttonSize=\"btn--small\"\n\n                    >\n                        \n                        Unfollow\n                    </Button> : \n                    <Button\n                        onClick={() => followUnfollow(user_id, id, \"follow\")}\n                        type=\"button\"\n                        buttonStyle=\"btn--primary\"\n                        buttonSize=\"btn--small\"\n                    >\n                        Follow\n                    </Button>\n                    \n                }\n\n                \n                \n            </div>\n        </div>\n    )\n}\n","/Users/thomasnewton/Desktop/network_frontend/src/components/landing/content/main-bar/create-post/CreatePost.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/landing/content/main-bar/title/TitleMainBar.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/homepage/content/main-bar/title/TitleMainBar.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/components/profile/content/main-bar/title/TitleMainBar.js",[],"/Users/thomasnewton/Desktop/network_frontend/src/reducers/filterPosts.js",["394"],"import { FILTER_POSTS, } from \"../actions/types\";\n\nconst initialState = {\n\tsearchTerm: [],\n};\n\nexport default function (state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase FILTER_POSTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsearchTerm: action.payload,\n\t\t\t};\n\t\t\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","/Users/thomasnewton/Desktop/network_frontend/src/actions/filterPosts.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/index.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/App.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/store.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/PrivateRoute.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/landing/Landing.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/homepage/Homepage.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/actions/auth.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/create/Create.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/navbar/Navbar.js",["395","396"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, connect } from 'react-redux'\n\nimport LoginModal from \"../loginModal/LoginModal\";\n\nimport \"./Navbar.css\";\n\nimport { FaRedditSquare, FaReddit } from \"react-icons/fa\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"../button/Button\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport DropdownIconMenu from \"./dropdownIconMenu/DropdownIconMenu\";\n\nimport Reddit_logo from \"../../assets/reddit_logo_red.png\"\n\nimport { filterPosts } from \"../../actions/filterPosts\";\n\nexport function Navbar({ state, isAuthenticated }) {\n\n\t// Sets drop down menu state to open or closed\n\tconst [dropDownState, setdropDownState] = useState({\n\t\tshowMenu: false,\n\t});\n\n\t\n\tconst handleMenu = () => {\n\t\tsetdropDownState({\n\t\t\tshowMenu: !dropDownState.showMenu,\n\t\t});\n\t};\n\n\t// Get Posts via getPosts function and redux dispathcer\n\tconst dispatch = useDispatch();\n\n\t// Search term to filer posts. \n\tconst [searchTerm, setSearchTerm] = useState('')\n\n\tconsole.log(searchTerm)\n\n\tuseEffect(() => {\n\t\tconsole.log(\"use effect being called\")\n\t\tdispatch(filterPosts(searchTerm))\n\t},[searchTerm]);\n\n\n\t// Check if click was inside dropdown menu\n\n\tconst onClickOutsideListener = () => {\n\t\tsetdropDownState({\n\t\t\tshowMenu: false,\n\t\t});\n\t\tdocument.removeEventListener(\"click\", onClickOutsideListener);\n\t};\n\n\t// Handle State for Modal (checks if user clicked on login or logout)\n\n\tconst [signInState, setsignInState] = useState({\n\t\topen: false,\n\t\tsignInType: \"\",\n\t});\n\n\t// setSignInState to closed if the user is authenticated\n\n\tuseEffect(() => {\n\t\tsetsignInState({ open: false });\n\t}, [isAuthenticated]);\n\n\tconst handleLogin = () => {\n\t\tsetsignInState({\n\t\t\topen: true,\n\t\t\tsignInType: \"login\",\n\t\t});\n\t};\n\n\tconst handleRegister = () => {\n\t\tsetsignInState({\n\t\t\topen: true,\n\t\t\tsignInType: \"register\",\n\t\t});\n\t};\n\n\tif (isAuthenticated) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div\n\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\tdocument.addEventListener(\"click\", onClickOutsideListener);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"navbar\">\n\t\t\t\t\t\t<div className=\"logo hoverable\">\n\t\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t\t<FaReddit size={35} className=\"navbar-fa-icon\"/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<span>reddit</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t<div className=\"searchBar\">\n\t\t\t\t\t\t\t<label htmlFor=\"searchBar\">\n\t\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input id=\"searchBar\" placeholder=\"Search Reddit\" onChange={event => {setSearchTerm(event.target.value)}}></input>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div onClick={handleMenu} className=\"actions\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\tdropDownState.showMenu\n\t\t\t\t\t\t\t\t\t\t\t? \"logged-in-profile-open\"\n\t\t\t\t\t\t\t\t\t\t\t: \"logged-in-profile\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FaRedditSquare />\n\t\t\t\t\t\t\t\t\t<div className=\"username\">{state.auth.user.username}</div>\n\t\t\t\t\t\t\t\t\t<ArrowDropDownIcon className=\"hoverable logged-in-arrow\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"logged-in-dropdown-icon-menu\">\n\t\t\t\t\t\t\t\t\t{dropDownState.showMenu ? <DropdownIconMenu /> : null}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"navbar\">\n\t\t\t\t\t<div className=\"logo hoverable\">\n\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t<FaReddit size={35} className=\"navbar-fa-icon\"/>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<span>reddit</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div onClick={handleRegister} className=\"searchBar\">\n\t\t\t\t\t\t<label htmlFor=\"searchBar\">\n\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input id=\"searchBar\" placeholder=\"Search Reddit\"></input>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"actions\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={handleLogin}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tbuttonStyle=\"btn--secondary\"\n\t\t\t\t\t\t\tbuttonSize=\"btn--small\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLog In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={handleRegister}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tbuttonStyle=\"btn--primary\"\n\t\t\t\t\t\t\tbuttonSize=\"btn--small\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<LoginModal\n\t\t\t\t\topen={signInState.open}\n\t\t\t\t\taction={signInState.signInType}\n\t\t\t\t\tonClose={() => setsignInState({ open: false })}\n\t\t\t\t\tsignInState={signInState} \n\t\t\t\t\tsetsignInState={setsignInState}\n\t\t\t\t></LoginModal>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tstate,\n\t\tisAuthenticated: state.auth.isAuthenticated,\n\t};\n}\n\nexport default connect(mapStateToProps)(Navbar);\n","/Users/thomasnewton/Desktop/project4/network_frontend/src/components/profile/Profile.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/reducers/index.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/actions/posts.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/actions/types.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/actions/filterPosts.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/landing/content/Content.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/homepage/content/Content.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/loginModal/LoginModal.js",["397"],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/button/Button.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/navbar/dropdownIconMenu/DropdownIconMenu.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/profile/content/Content.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/reducers/followingPosts.js",["398"],"/Users/thomasnewton/Desktop/project4/network_frontend/src/reducers/filterPosts.js",["399"],"/Users/thomasnewton/Desktop/project4/network_frontend/src/reducers/auth.js",["400"],"/Users/thomasnewton/Desktop/project4/network_frontend/src/reducers/posts.js",["401"],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/landing/content/main-bar/MainBar.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/landing/content/side-bar/SideBar.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/homepage/content/main-bar/MainBar.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/homepage/content/side-bar/SideBar.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/accounts/Login.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/profile/content/main-bar/MainBar.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/accounts/Register.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/profile/content/side-bar/SideBar.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/landing/content/main-bar/title/TitleMainBar.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/landing/content/main-bar/create-post/CreatePost.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/landing/content/main-bar/posts/Posts.js",["402","403","404","405","406","407"],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/homepage/content/main-bar/title/TitleMainBar.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/homepage/content/main-bar/create-post/CreatePost.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/homepage/content/main-bar/posts/Posts.js",["408","409","410","411","412"],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/profile/content/main-bar/title/TitleMainBar.js",[],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/profile/content/main-bar/posts/Posts.js",["413","414","415","416","417","418"],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/profile/content/side-bar/user-profile/UserProfile.js",["419","420"],"/Users/thomasnewton/Desktop/project4/network_frontend/src/components/pagination/Pagination.js",[],{"ruleId":"421","replacedBy":"422"},{"ruleId":"423","replacedBy":"424"},{"ruleId":"425","severity":1,"message":"426","line":15,"column":8,"nodeType":"427","messageId":"428","endLine":15,"endColumn":19},{"ruleId":"429","severity":1,"message":"430","line":44,"column":4,"nodeType":"431","endLine":44,"endColumn":16,"suggestions":"432"},{"ruleId":"421","replacedBy":"433"},{"ruleId":"423","replacedBy":"434"},{"ruleId":"435","severity":1,"message":"436","line":16,"column":1,"nodeType":"437","endLine":46,"endColumn":2},{"ruleId":"435","severity":1,"message":"436","line":10,"column":1,"nodeType":"437","endLine":50,"endColumn":2},{"ruleId":"429","severity":1,"message":"438","line":24,"column":8,"nodeType":"431","endLine":24,"endColumn":10,"suggestions":"439"},{"ruleId":"425","severity":1,"message":"440","line":47,"column":9,"nodeType":"427","messageId":"428","endLine":47,"endColumn":13},{"ruleId":"429","severity":1,"message":"438","line":54,"column":8,"nodeType":"431","endLine":54,"endColumn":14,"suggestions":"441"},{"ruleId":"442","severity":1,"message":"443","line":61,"column":45,"nodeType":"444","messageId":"445","endLine":61,"endColumn":47},{"ruleId":"446","severity":1,"message":"447","line":62,"column":36,"nodeType":"448","messageId":"449","endLine":62,"endColumn":38},{"ruleId":"429","severity":1,"message":"430","line":25,"column":8,"nodeType":"431","endLine":25,"endColumn":10,"suggestions":"450"},{"ruleId":"425","severity":1,"message":"440","line":60,"column":9,"nodeType":"427","messageId":"428","endLine":60,"endColumn":13},{"ruleId":"429","severity":1,"message":"430","line":73,"column":8,"nodeType":"431","endLine":73,"endColumn":14,"suggestions":"451"},{"ruleId":"429","severity":1,"message":"430","line":99,"column":8,"nodeType":"431","endLine":99,"endColumn":16,"suggestions":"452"},{"ruleId":"442","severity":1,"message":"443","line":108,"column":45,"nodeType":"444","messageId":"445","endLine":108,"endColumn":47},{"ruleId":"446","severity":1,"message":"447","line":109,"column":36,"nodeType":"448","messageId":"449","endLine":109,"endColumn":38},{"ruleId":"435","severity":1,"message":"436","line":7,"column":1,"nodeType":"437","endLine":18,"endColumn":2},{"ruleId":"421","replacedBy":"453"},{"ruleId":"423","replacedBy":"454"},{"ruleId":"429","severity":1,"message":"455","line":28,"column":8,"nodeType":"431","endLine":28,"endColumn":10,"suggestions":"456"},{"ruleId":"425","severity":1,"message":"440","line":65,"column":9,"nodeType":"427","messageId":"428","endLine":65,"endColumn":13},{"ruleId":"429","severity":1,"message":"430","line":79,"column":8,"nodeType":"431","endLine":79,"endColumn":18,"suggestions":"457"},{"ruleId":"429","severity":1,"message":"455","line":105,"column":8,"nodeType":"431","endLine":105,"endColumn":16,"suggestions":"458"},{"ruleId":"442","severity":1,"message":"443","line":113,"column":45,"nodeType":"444","messageId":"445","endLine":113,"endColumn":47},{"ruleId":"446","severity":1,"message":"447","line":114,"column":36,"nodeType":"448","messageId":"449","endLine":114,"endColumn":38},{"ruleId":"429","severity":1,"message":"459","line":59,"column":8,"nodeType":"431","endLine":59,"endColumn":10,"suggestions":"460"},{"ruleId":"446","severity":1,"message":"447","line":102,"column":26,"nodeType":"448","messageId":"449","endLine":102,"endColumn":28},{"ruleId":"435","severity":1,"message":"436","line":7,"column":1,"nodeType":"437","endLine":18,"endColumn":2},{"ruleId":"425","severity":1,"message":"426","line":15,"column":8,"nodeType":"427","messageId":"428","endLine":15,"endColumn":19},{"ruleId":"429","severity":1,"message":"430","line":44,"column":4,"nodeType":"431","endLine":44,"endColumn":16,"suggestions":"461"},{"ruleId":"429","severity":1,"message":"462","line":19,"column":5,"nodeType":"431","endLine":19,"endColumn":20,"suggestions":"463"},{"ruleId":"435","severity":1,"message":"436","line":7,"column":1,"nodeType":"437","endLine":18,"endColumn":2},{"ruleId":"435","severity":1,"message":"436","line":7,"column":1,"nodeType":"437","endLine":18,"endColumn":2},{"ruleId":"435","severity":1,"message":"436","line":10,"column":1,"nodeType":"437","endLine":50,"endColumn":2},{"ruleId":"435","severity":1,"message":"436","line":16,"column":1,"nodeType":"437","endLine":46,"endColumn":2},{"ruleId":"429","severity":1,"message":"430","line":25,"column":8,"nodeType":"431","endLine":25,"endColumn":10,"suggestions":"464"},{"ruleId":"425","severity":1,"message":"440","line":60,"column":9,"nodeType":"427","messageId":"428","endLine":60,"endColumn":13},{"ruleId":"429","severity":1,"message":"430","line":73,"column":8,"nodeType":"431","endLine":73,"endColumn":14,"suggestions":"465"},{"ruleId":"429","severity":1,"message":"430","line":99,"column":8,"nodeType":"431","endLine":99,"endColumn":16,"suggestions":"466"},{"ruleId":"442","severity":1,"message":"443","line":108,"column":45,"nodeType":"444","messageId":"445","endLine":108,"endColumn":47},{"ruleId":"446","severity":1,"message":"447","line":109,"column":36,"nodeType":"448","messageId":"449","endLine":109,"endColumn":38},{"ruleId":"429","severity":1,"message":"438","line":24,"column":8,"nodeType":"431","endLine":24,"endColumn":10,"suggestions":"467"},{"ruleId":"425","severity":1,"message":"440","line":47,"column":9,"nodeType":"427","messageId":"428","endLine":47,"endColumn":13},{"ruleId":"429","severity":1,"message":"438","line":54,"column":8,"nodeType":"431","endLine":54,"endColumn":14,"suggestions":"468"},{"ruleId":"442","severity":1,"message":"443","line":61,"column":45,"nodeType":"444","messageId":"445","endLine":61,"endColumn":47},{"ruleId":"446","severity":1,"message":"447","line":62,"column":36,"nodeType":"448","messageId":"449","endLine":62,"endColumn":38},{"ruleId":"429","severity":1,"message":"455","line":28,"column":8,"nodeType":"431","endLine":28,"endColumn":10,"suggestions":"469"},{"ruleId":"425","severity":1,"message":"440","line":65,"column":9,"nodeType":"427","messageId":"428","endLine":65,"endColumn":13},{"ruleId":"429","severity":1,"message":"430","line":79,"column":8,"nodeType":"431","endLine":79,"endColumn":18,"suggestions":"470"},{"ruleId":"429","severity":1,"message":"455","line":105,"column":8,"nodeType":"431","endLine":105,"endColumn":16,"suggestions":"471"},{"ruleId":"442","severity":1,"message":"443","line":113,"column":45,"nodeType":"444","messageId":"445","endLine":113,"endColumn":47},{"ruleId":"446","severity":1,"message":"447","line":114,"column":36,"nodeType":"448","messageId":"449","endLine":114,"endColumn":38},{"ruleId":"429","severity":1,"message":"459","line":59,"column":8,"nodeType":"431","endLine":59,"endColumn":10,"suggestions":"472"},{"ruleId":"446","severity":1,"message":"447","line":102,"column":26,"nodeType":"448","messageId":"449","endLine":102,"endColumn":28},"no-native-reassign",["473"],"no-negated-in-lhs",["474"],"no-unused-vars","'Reddit_logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["475"],["473"],["474"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch' and 'user_id'. Either include them or remove the dependency array.",["476"],"'type' is assigned a value but never used.",["477"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["478"],["479"],["480"],["473"],["474"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["481"],["482"],["483"],"React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'user_id'. Either include them or remove the dependency array.",["484"],["485"],"React Hook useEffect has a missing dependency: 'setsignInState'. Either include it or remove the dependency array. If 'setsignInState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["486"],["487"],["488"],["489"],["490"],["491"],["492"],["493"],["494"],["495"],"no-global-assign","no-unsafe-negation",{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"desc":"496","fix":"516"},{"desc":"517","fix":"518"},{"desc":"502","fix":"519"},{"desc":"504","fix":"520"},{"desc":"506","fix":"521"},{"desc":"498","fix":"522"},{"desc":"500","fix":"523"},{"desc":"508","fix":"524"},{"desc":"510","fix":"525"},{"desc":"512","fix":"526"},{"desc":"514","fix":"527"},"Update the dependencies array to be: [dispatch, searchTerm]",{"range":"528","text":"529"},"Update the dependencies array to be: [dispatch, user_id]",{"range":"530","text":"531"},"Update the dependencies array to be: [dispatch, user_id, vote]",{"range":"532","text":"533"},"Update the dependencies array to be: [dispatch]",{"range":"534","text":"535"},"Update the dependencies array to be: [dispatch, vote]",{"range":"536","text":"537"},"Update the dependencies array to be: [dispatch, edited]",{"range":"538","text":"539"},"Update the dependencies array to be: [dispatch, id]",{"range":"540","text":"541"},"Update the dependencies array to be: [vote, id, dispatch]",{"range":"542","text":"543"},"Update the dependencies array to be: [dispatch, edited, id]",{"range":"544","text":"545"},"Update the dependencies array to be: [dispatch, id, user_id]",{"range":"546","text":"547"},{"range":"548","text":"529"},"Update the dependencies array to be: [Authenticated, setsignInState]",{"range":"549","text":"550"},{"range":"551","text":"535"},{"range":"552","text":"537"},{"range":"553","text":"539"},{"range":"554","text":"531"},{"range":"555","text":"533"},{"range":"556","text":"541"},{"range":"557","text":"543"},{"range":"558","text":"545"},{"range":"559","text":"547"},[1205,1217],"[dispatch, searchTerm]",[730,732],"[dispatch, user_id]",[1769,1775],"[dispatch, user_id, vote]",[835,837],"[dispatch]",[2243,2249],"[dispatch, vote]",[2888,2896],"[dispatch, edited]",[928,930],"[dispatch, id]",[2389,2399],"[vote, id, dispatch]",[3044,3052],"[dispatch, edited, id]",[1942,1944],"[dispatch, id, user_id]",[1205,1217],[646,661],"[Authenticated, setsignInState]",[835,837],[2243,2249],[2888,2896],[730,732],[1769,1775],[928,930],[2389,2399],[3044,3052],[1942,1944]]